
#
# usefull functions for the Back Tracking algorithm
#

if (!exists(ShortestPathUtils))  \
{
Class ShortestPathUtils \
{

  #------------------------------------------------------------------
  proc ::SP_PathFromVectField(IMAGE DT, NUM step_size, NUM maxlength,\
                           NUM Px1, NUM Py1, NUM Pz1,\
                           NUM Px2, NUM Py2, NUM Pz2) \
  {
    p1 = vector_double(3)
    p1[0] = Px1
    p1[1] = Py1
    p1[2] = Pz1
    p2 = vector_double(3)
    p2[0] = Px2
    p2[1] = Py2
    p2[2] = Pz2
    return=algorithms.ShortestPathClass.Func_path_from_vectfield_2(&DT,&p1[0],&p2[0],step_size,maxlength)
  }
  Comments(::SP_PathFromVectField,"")

  #------------------------------------------------------------------
  proc ::SP_PathFromPotential(IMAGE DT, NUM step_size, NUM maxlength,\
                           NUM Px1, NUM Py1, NUM Pz1) \
  {
    p1 = vector_double(3)
    p1[0] = Px1
    P1[1] = Py1
    P1[2] = Pz1
    return=algorithms.ShortestPathClass.Func_path_from_vectfield_1(&DT,&p1[0],step_size,maxlength)
  }
  Comments(::SP_PathFromPotential,"")
}
}
