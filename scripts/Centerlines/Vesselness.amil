if (!exists(VS_defined)) {
  VS_defined=1
	import_itk
	
	proc VS_init() {
		global_new
		
		VS_input_name   = "","Name of the input image variable"
		VS_sigmaMin = 0, "Minimum sigma value"
		VS_sigmaMax = 0, "Maximum sigma value"
		VS_scalesNumber = INT(10), "Number of scale levels"
    VS_dim = INT(1), "The dimension of the image"

		VS_vesselness_filename = "VesselnessResult"
    VS_result_filename_ext = ".ami.gz"
		VS_v = UCHAR(0)
				
		VS_Gui()
	}
	
	proc VS_Close() \
  {
    VS_win.Hide
    delvars "VS_*_draw"
    delvars "VS_*"
  }
  VS_Close.Comments("Close current script and delete its variables")
	
	proc VS_load_input() {

		eval "global::VS_input <<= (FLOAT)"+VS_input_name+";"
			if (VS_input_name=="Image") {
				VS_input_name = "VS_input"
				VS_win.update
			}
		
    show VS_input
  }
	
	proc VS_Run() {
		if (VS_dim==0) {
			global::VS_vesselness = itkMultiScaleVesselnessFilter2D(VS_input,VS_sigmaMin,VS_sigmaMax,VS_scalesNumber)
			VS_v = 1
			
		} else {
			global::VS_vesselness = itkMultiScaleVesselnessFilter3D(VS_input,VS_sigmaMin,VS_sigmaMax,VS_scalesNumber)
			VS_v = 1
		}
		show VS_input
		show VS_vesselness
		VS_input_draw.compare(VS_vesselness_draw)
	}
	
	proc VS_Save() {
		filename=VS_vesselness_filename-".gz"-".ami";
    if (VS_v) {
      filename = filename + sprint("_sigmaMin%0.1f",VS_sigmaMin) \
                          + sprint("_sigmaMin%0.1f",VS_sigmaMax) \
                          + sprint("_scalesNumber%0.1f",VS_scalesNumber) 
    } else {
			print "First you must create the image.\n"
		}
    filename = filename + VS_result_filename_ext
    print "saving file "+filename+"\n"
    VS_vesselness.save filename
  }
	

	proc VS_Gui() {
		global::VS_win = ParamWin("WaterShed")
    VS_win.BeginBook
		
			VS_win.AddPage("Init")
			
			VS_win.BeginBoxPanel("Input Image")
        # set the input image
          VS_win.BeginHorizontal
            VS_win.AddImageChoice(VS_input_name, "")
            VS_win.AddButton("Load",VS_load_input)
          VS_win.EndHorizontal
					VS_win.BeginHorizontal
						dim_id = VS_win.AddEnum(VS_dim,"Dimension")
						VS_win.AddEnumChoice(dim_id, "2D")
						VS_win.AddEnumChoice(dim_id, "3D")
					VS_win.EndHorizontal
			VS_win.EndBoxPanel
			
			VS_win.AddPage("Param")
			
			VS_win.BeginBoxPanel("Vesselness Param")
				VS_win.AddFloat(VS_sigmaMin,"sigmaMin",0.01,10)
        VS_win.AddFloat(VS_sigmaMax,"sigmaMax",0.01,10)
				VS_win.AddInt(VS_scalesNumber,"Number of Scales",1,20)
			VS_win.EndBoxPanel
			
			VS_win.AddPage("Run")
			
			VS_win.BeginBoxPanel("Processing")
				VS_win.AddButton("Run", VS_Run)
			VS_win.EndBoxPanel
			
			VS_win.AddPage("Save")
			
			VS_win.BeginBoxPanel("Result")
				VS_win.AddButton("Save", VS_Save)
			VS_win.EndBoxPanel
			
		VS_win.EndBook
		
		VS_win.AddButton("Close",VS_Close)
		
		VS_win.update
    VS_win.Display
	}
	
	VS_init
	
}
# end if (!VS_defined) 