#!/usr/bin/amilab

func "Centerlines/MultiLines.amil"

proc RML_init( IMAGE input) {
  global_new
  RML_input = input
  RML_radmin=0.5
  RML_radmax=3
  RML_numrad=INT(5)
  RML_mask = RML_input
  RML_mask <<= (UCHAR) (RML_mask>0.1)*255

  RML_output_name="Multilines-maxresponse.ami.gz"
  RML_gui()
}

proc RML_SetMask( IMAGE mask) {
  global_new
  RML_mask <<= (UCHAR) (mask>0.1)*255
}

proc RML_filter() {
  global_new
  RML_result=Image(FLOAT,1,RML_input)
  RML_result.initvalue(0)
  
  RML_maxres = RML_result
  RML_radim  = RML_result
  
  #MultiLines(input_image,&result,&maxres,&radim,radmin,radmax,numrad,GB_mask,1)
  MultiLines_new(&RML_input,&RML_result,\
      RML_radmin,RML_radmax,RML_numrad,&RML_mask,1)
}



proc CB_RML_ROI() {
}

proc CB_RML_Filter() {
  RML_filter()
}

proc CB_RML_Display() {
  global_new
  show RML_input
  RML_input_draw.compare(RML_result)
}

proc CB_RML_Save() {
  RML_result.save RML_output_name
}

proc RML_gui() {
  global_new

  RML_win = ParamWin("Vesselness")

  RML_radmin_id = RML_win.AddFloat(RML_radmin,0.01,10)
  RML_radmax_id = RML_win.AddFloat(RML_radmax,0.01,10)
  RML_numrad_id = RML_win.AddInt(  RML_numrad,1,20)
  RML_outputname_id = RML_win.AddString(  RML_output_name, "Output")

  RML_win.BeginBox("Controls")
    RML_win.BeginHorizontal
        ROI_id     = RML_win.AddButton("Select ROI", CB_RML_ROI)
        iterate_id = RML_win.AddButton("Filter",     CB_RML_Filter)
    RML_win.EndHorizontal
    RML_win.BeginHorizontal
        display_id = RML_win.AddButton("Display",    CB_RML_Display)
        display_id = RML_win.AddButton("Save",       CB_RML_Save)
    RML_win.EndHorizontal
  RML_win.EndBox

  RML_win.CreateWin
  RML_win.Display
  RML_win.update
}

