func "Common/ScriptGui"


if (!exists(itkSigmoidFilterClass)) {
  
  
  Class itkSigmoidFilterClass : public ScriptGui {
    
    #------------------------------------
    proc ::Init() {
      
      ::input_name   = "","Name of the input image variable"
      ::stand = 0.5, "Standard deviation of the Gaussian kernel."
      
      ::min = 0.0, "Set the minimum value of the output image."
      ::max = 1.0, "Set the maximum value of the output image."
      
      ::alpha = -0.5, "Constant to compute the sigmoid function and FastMarching solution."
      ::beta = 3, "Constant to compute the sigmoid function and FastMarching solution."
      ::dim = INT(1), "The dimension of the image."
      
      ::inputmin = 0, "Minimal Intensity of the image."
      ::inputmax = 32000, "Maximal Intensity of the image."
      
      ::help = "http://www.itk.org/Doxygen316/html/classitk_1_1SigmoidImageFilter.html"
      ::html_filename = GetScriptsDir+"/BasicFilters/itkSigmoid/doc/sigmoid/index.html"
      
    }

    #------------------------------------
    proc ::Load_input() {

      eval "::input <<= (FLOAT)"+::input_name+";"
        if (::input_name=="Image") {
          ::input_name = "::input"
          ::win.Update(-1)
        }
      
      ::inputmin = min(::input)
      ::inputmax = max(::input)
      
      show ::input
    }
    
    #------------------------------------
    proc ::Run() {
      ::grad = normgrad(::input,::stand)
      ::g = 1
      if (::dim==0) {
        ::sigmoid = itk.SigmoidImageFilter2D(::grad,::min,::max,::alpha,::beta)			
      } else {
        ::sigmoid = itk.SigmoidImageFilter3D(::grad,::min,::max,::alpha,::beta)
      }      
    }
    
    #------------------------------------
    proc ::set_input(IMAGE im) \
    {
      ::input <<= im
    }
    
    #------------------------------------
    proc ::Display() {
    
      show ::input
      show ::sigmoid
      ::input_draw.compare(&::sigmoid_draw)
    
    }
    
    #------------------------------------
    proc ::set_sigmoid(IMAGE im) \
    {
      ::sigmoid <<= im
    }
    
    #---------------------------------------------------
    proc ::Gui() \
    {
      
      if (exists(::parent_panel)) {
        ::win = ParamPanel("itkSig",&::parent_panel)
      } else {
        ::win = ParamPanel("itkSig")
      }
      ::win.BeginBook()
      
        ::win.AddPage("Init")
        
        ::win.BeginBoxPanel("Input Image")
            # set the input image
            ::win.BeginHorizontal()
              ::win.AddImageChoice( &::input_name, "")
              ::win.AddButton("Load",::Load_input)
            ::win.EndHorizontal()
            ::win.BeginHorizontal()
              dim_id = ::win.AddEnum( &::dim,"Dimension")
              ::win.AddEnumChoice(dim_id, "2D")
              ::win.AddEnumChoice(dim_id, "3D")
            ::win.EndHorizontal()
        ::win.EndBoxPanel()
                
        ::win.AddPage("Param")
        
          ::win.AddFloat( &::stand,"StandDev",0,(::inputmax-::inputmin)/2)
          ::win.AddFloat( &::min,"OutputMin",0,::inputmin)
          ::win.AddFloat( &::max,"OutputMax",0,::inputmax)
          ::win.AddFloat( &::alpha,"Alpha",-3,::inputmax)  
          ::win.AddFloat( &::beta,"Beta",0,::inputmax)        

          ::win.AddButton("Run", ::Run)
          ::win.AddButton("Display", ::Display)
          
       ::AddHelpPage(&::win)
        
      ::win.EndBook()
      
      if (!exists(::parent_panel)) {
        ::AddStandardButtons(&::win)
      }
      
      if (exists(::parent_panel)) {
        ::win.ShowPanel()
      } else {
        ::win.Display()
      }
      ::win.Update(-1)
    }
    
    ::Init()
  }
# Class itkSigmoidFilterClass
}
# end if (!exists(itkSigmoidFilterClass))
