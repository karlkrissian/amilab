#!/usr/bin/amilab

#
# Script for drawing 2D functions
# or lines from an image
#

comments="VolRen: VTK GPU RayCasting."

func "Common/ScriptGui"

import_vtk

if (!exists(VolRenClass)) {

  Class VolRenClass : public ScriptGui {

    ::ami_import = &global::ami_import
    #----------------------------
    proc ::Init() \
    {
      ::input_name =  "", "name of the input image"

      ::blend_type = INT(1), "Blend type: 0->MIP, 1->CompositeRamp, 2->CompositeShadeRamp, 3->CT_Skin, 4->CT_Bone, 5->RGB_Composite"
      ::opacitywindow = 1000, "Opacity Window"
      ::opacitylevel  = 1000, "Opacity Level"
      ::clip = UCHAR(1), "Enable/Disable clipping box"
      #::Gui()
    }
    
    #----------------------------
    proc ::load_input() {
      if (exists(::input)) { del ::input; }
      eval "::input = &"+::input_name+";"
      if (::input_name=="Image") {
        ::input_name = "::input"
        ::win.Update(-1)
      }
    }
  
    #----------------------------
    proc ::UpdateIntensityLimits() {
      if (exists(::input)) {
        ::min_val = min(::input)
        ::max_val = max(::input)
        ::win.FloatConstraints(::opacitylevel_id,::min_val,::max_val,::opacitylevel)
        ::win.FloatConstraints(::opacitywindow_id,::min_val,::max_val,::opacitywindow)
        ::win.Update(-1)
      }
    }

    #----------------------------
    proc ::ImReload() \
    {
      ::load_input()
    }

    #----------------------------
    proc ::Start() \
    {
      if (!exists(::input)) {
        ::load_input()
      }
      ::renderer = global::vtkGPURayCasting(&::input, \
        ::blend_type, ::opacitywindow, ::opacitylevel, ::clip)
    }

    #----------------------------
    proc ::Gui() {
    
      # parameters window
      import = &global::ami_import;
      ::win = import->ParamPanel("VolRen")
      
      ::win.BeginBook()
    
        ::win.AddPage("Param")

          # set the input image drawing window
          ::win.BeginBoxPanel("Input")
            ::win.BeginHorizontal()
              ::win.AddImageChoice( &::input_name, "")
              ::AddBitmapButton16(&::win, &::icons._Refresh, "ImReload")
              #::win.AddButton( "ImReload",&::ImReload)
            ::win.EndHorizontal()
          ::win.EndBoxPanel()

          ::win.BeginBoxPanel("Parameters")
            ::blend_type_id = ::win.AddEnum(&::blend_type,"Blend")
              ::win.AddEnumChoice(::blend_type_id,"MIP")
              ::win.AddEnumChoice(::blend_type_id,"Composite Ramp")
              ::win.AddEnumChoice(::blend_type_id,"Composite Shade Ramp")
              ::win.AddEnumChoice(::blend_type_id,"CT Skin")
              ::win.AddEnumChoice(::blend_type_id,"CT Bone")
              ::win.AddEnumChoice(::blend_type_id,"RGB Composite")
            ::opacitywindow_id = ::win.AddFloat(&::opacitywindow,"Window",0,5000)
            ::opacitylevel_id = ::win.AddFloat(&::opacitylevel,"Level",0,5000)
            ::win.AddBoolean(&::clip, "Clipping box")
          ::win.EndBoxPanel()

          ::win.AddButton("Start",::Start)
  
      ::win.EndBook()

      ::AddStandardButtons(&::win)
      
      ::win.Update(-1)
      ::win.Display()
   }

    ::Init()
  } 
  # Class VolRenClass
  Comments( VolRenClass, comments)
} 
# end if (!exists(VolRenClass))
  
  

