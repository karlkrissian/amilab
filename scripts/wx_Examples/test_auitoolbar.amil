
# Create new toolbar
ex3_newtb = wx.wxAuiToolBar(&ami.MainFrame, wx.wxID_ANY, \
                    wx.wxPoint(-1,-1), wx.wxSize(-1,-1), \
                    wx.wxAUI_TB_DEFAULT_STYLE | wx.wxAUI_TB_OVERFLOW)
ex3_newtb.SetToolBitmapSize(wx.wxSize(36,36))

# Load icons
func "Common/LoadIcons.amil"
LoadIcons ex3_icons

# Add two icons: open and save
# we need to be sure that the id is not in use ...
Class ex3_toolbar_id \
{
  ::open_id  = 3001
  ::close_id = 3002
}
ex3_toolbar_id ex3_tbid

ex3_newtb.AddTool(ex3_tbid.open_id,  "Open", wx.wxBitmap(ex3_icons._Open),"Open")
ex3_newtb.AddSeparator()
ex3_newtb.AddTool(ex3_tbid.close_id, "Close", wx.wxBitmap(ex3_icons._Close),"Close")
ex3_newtb.Realize()

# add the toolbars to the manager
ex3_mgr = ami.MainFrame.GetAuiManager()
ex3_mgr.AddPane(&ex3_newtb, wx.wxAuiPaneInfo().\
              Name("ex3_newtb").Caption("New Toolbar"). \
              ToolbarPane().Top().Position(2).\
              LeftDockable(false).RightDockable(false))

# tell the manager to "commit" all the changes just made
ex3_mgr.Update()

# now deal with button events ...
proc ex3_TB_Open() { InfoDialog("open ..."); }
ex3_evoph=wx.wxAmiEventHandler(&ex3_TB_Open)

ex3_evoph=wx.wxAmiEventHandler(&ex3_TB_Open)
# wxEVT_COMMAND_TOOL_CLICKED event (a synonym for wxEVT_COMMAND_MENU_SELECTED)
ex3_newtb.Connect(ex3_tbid.open_id,wx.wxEVT_COMMAND_MENU_SELECTED,&ex3_evoph.GetEventFunction(),\
                      wx.wxObject(),&ex3_evoph)

proc ex3_TB_Close() {  
  global::ex3_mgr.DetachPane(&global::ex3_newtb)
  global::ex3_newtb.Hide()
  del global::ex3_newtb
  global::ex3_mgr.Update()
}
ex3_evclh=wx.wxAmiEventHandler(&ex3_TB_Close)
ex3_newtb.Connect(ex3_tbid.close_id,wx.wxEVT_COMMAND_MENU_SELECTED,&ex3_evclh.GetEventFunction(),\
                      wx.wxObject(),&ex3_evclh)

