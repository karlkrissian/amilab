
del DVTreeListTestClass 

Class DVTreeListTestClass {

  #----------------------------------------------------------------------------
  proc ::CreateDV() {
    ::fr = wx.wxFrame( ami.MainFrame, wx.wxID_ANY, "DICOM Tags Viewer",\
                        wx.wxPoint(100,100), wx.wxSize(400,600))
    ::fr.Show()
    ::topsizer = wx.wxBoxSizer(wx.wxVERTICAL)
    ::fr.SetSizer( ::topsizer )      # use the sizer for layout
    ::tl = wx.wxDataViewTreeListCtrl( ::fr,\
                                      wx.wxID_ANY,\
                                      wx.wxPoint(-1,-1),\
                                      wx.wxSize(-1,-1),\
                                      wx.wxDV_ROW_LINES | \
                                      wx.wxDV_HORIZ_RULES |\
                                      wx.wxDV_VERT_RULES\
                                    )
    ::CreateColumns()

    ::topsizer.Add( ::tl ,wx.wxSizerFlags(1).Expand().Border(wx.wxALL, 10))
    
    #::topsizer.Fit(::fr)
    ::fr.Layout()
  }
  
  #----------------------------------------------------------------------------
  proc ::CreateColumns() \
  {
    # Tag Column
    c0 = ::tl.GetColumn(0)
    c0.SetTitle("Tag")

    # Value Column
    ::tl.AppendTextColumn("Value",\
                          wx.wxDATAVIEW_CELL_INERT,\
                          -1,\
                          wx.wxALIGN_NOT, \
                          wx.wxDATAVIEW_COL_RESIZABLE)
    
    # Value Representation Column
    ::tl.AppendTextColumn("VR",\
                          wx.wxDATAVIEW_CELL_INERT,\
                          -1,\
                          wx.wxALIGN_NOT, \
                          wx.wxDATAVIEW_COL_RESIZABLE)
    
    # Description Column
    ::tl.AppendTextColumn("Description",\
                          wx.wxDATAVIEW_CELL_INERT,\
                          -1,\
                          wx.wxALIGN_NOT, \
                          wx.wxDATAVIEW_COL_RESIZABLE)
   ::tl.SetIndent(2)
    
  }
  
  #----------------------------------------------------------------------------
  proc ::ShowEntries( OBJECT entries) \
  {
    # Add root container
    # can't use wxDataViewItem(0) like in C++, see Mantis Bug Tracker report
    # 0000008
    ::root_item  = ::tl.AppendContainer( wx.wxDataViewItem(),"Dicom File")
    
    for n=0 to entries.size()-1 {
      entry_item = ::tl.AppendItem(::root_item,entries[n].tag)
      ::tl.SetValue(wx.wxVariant(entries[n].vr)         ,entry_item,1)
      ::tl.SetValue(wx.wxVariant(entries[n].value)      ,entry_item,2)
      ::tl.SetValue(wx.wxVariant(entries[n].description),entry_item,3)
    }
  }

  ::CreateDV()
  #::CreateColumns()
}

#------------------------------------------------------------------------------
#------------------------------------------------------------------------------

del DVTreeListTest_obj
DVTreeListTestClass DVTreeListTest_obj

del DictEntryInfo
Class DictEntryInfo {

  proc ::Init() {
    ::tag="(,)"
    ::vr=""
    ::value=""
    ::description=""
  }
  
  #
  proc ::Set(STRING tag, STRING vr,STRING value, STRING description) {
    ::tag=tag
    ::vr=vr
    ::value=value
    ::description=description
  }
  
  ::Init()
}

# Example
#
entries=VarVector()
del entry  
DictEntryInfo entry
entry.Set("(0x00,0x00)","VR","value1","value 1")
entries.push_back(entry)

del entry  
DictEntryInfo entry
entry.Set("(0x00,0x01)","VR","value2","value 2")
entries.push_back(entry)

DVTreeListTest_obj.ShowEntries(entries)
