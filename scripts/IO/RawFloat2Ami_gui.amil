#!/usr/bin/amilab

#
# Data raw data into an image variable
#

if (exists(RRD_Init)) {
  printn "RawFloat2Ami_gui.amil script already loaded, close it first"
} else {

  proc RRD_Init() {
    global_new
      RRD_dimx = INT(512)
      RRD_dimy = INT(512)
      RRD_dimz = INT(100)
      RRD_dimv = INT(1)
      RRD_typePix = INT(0)  # 0:UCHAR, 1:UINT, 2:INT, 3:FLOAT, 4:DOUBLE
      RRD_endianess = INT(0)  # 0:Little, 1:Big
      RRD_voxSizeX = 1
      RRD_voxSizeY = 1
      RRD_voxSizeZ = 1
      RRD_file_name = ""
      
      RRD_Gui()
  }
  
  #------------------------------------
  proc RRD_Close() {
    RRD_win.Hide
    delvars "RRD_*_draw"
    delvars "RRD_*"
  }

  #------------------------------------
  proc RRD_Read() {
  
    printn "Read"
    if (typePix == 0) {
      global::i = ReadRawImages(dimx,dimy,dimz,UCHAR,dimv,endianess,file_name)
    }
    if (typePix == 1) {
      global::i = ReadRawImages(dimx,dimy,dimz,UINT,dimv,endianess,file_name)
    }
    if (typePix == 2) {
      global::i = ReadRawImages(dimx,dimy,dimz,INT,dimv,endianess,file_name)
    }
    if (typePix == 3) {
      global::i = ReadRawImages(dimx,dimy,dimz,FLOAT,dimv,endianess,file_name)
    }
    if (typePix == 4) {
      global::i = ReadRawImages(dimx,dimy,dimz,DOUBLE,dimv,endianess,file_name)
    }
  
    i.setvoxelsize(voxSizeX, voxSizeY, voxSizeZ)
  
  }
  
  proc RRD_Save() {
    i.save file_name-".raw"+".ami.gz"
  }
  
  proc RRD_ShowImage() {
    global_new
  
    show i
  }
  
  proc RRD_Gui( ) {
    global_new
  
    RRD_win = ParamWin("Read Raw")

    RRD_win.BeginBook
    RRD_win.AddPage("Init")
  
      RRD_win.BeginBox("Image dimensions and type")
        RRD_win.AddInt    (RRD_dimx,0,1024)
        RRD_win.AddInt    (RRD_dimy,0,1024)
        RRD_win.AddInt    (RRD_dimz,0,1024)
  
        pi_typePix = RRD_win.AddEnum   (RRD_typePix)
          RRD_win.AddEnumChoice(pi_typePix,"UCHAR")
          RRD_win.AddEnumChoice(pi_typePix,"UINT")
          RRD_win.AddEnumChoice(pi_typePix,"INT")
          RRD_win.AddEnumChoice(pi_typePix,"FLOAT")
          RRD_win.AddEnumChoice(pi_typePix,"DOUBLE")
        pi_endianess  = RRD_win.AddEnum   (RRD_endianess,2)
          RRD_win.AddEnumChoice(pi_endianess,"Little")
          RRD_win.AddEnumChoice(pi_endianess,"Big")
      RRD_win.EndBox
      RRD_win.BeginBox("Voxel size")
        RRD_win.AddFloat    (RRD_voxSizeX,0,10)
        RRD_win.AddFloat    (RRD_voxSizeY,0,10)
        RRD_win.AddFloat    (RRD_voxSizeZ,0,10)
      RRD_win.EndBox
  
      RRD_win.AddFilename(RRD_file_name, "Read raw image", ".", "*")
    
      RRD_win.BeginHorizontal
        RRD_win.AddButton("Read",     RRD_Read)
        RRD_win.AddButton("Show",     RRD_ShowImage)
      RRD_win.EndHorizontal
      RRD_win.AddButton("Save as ami.gz", RRD_Save)
    RRD_win.EndBook
    RRD_win.AddButton("Close",RRD_Close)
  
    RRD_win.update
    RRD_win.Display
    
  }
  
  RRD_Init()
}
# end else if exists(RRD_Init)
