#!/usr/bin/amilab

#
# Data raw data into an image variable
#

if (!exists(RawFloat2AmiClass)) {

  Class RawFloat2AmiClass{

    #----------------------------
    proc ::Init() \
    {
	    ::class_name ="RawFloat2AmiClass"
	    ::dimx = INT(512)
      ::dimy = INT(512)
      ::dimz = INT(100)
      ::dimv = INT(1)
      ::typePix = INT(0)  # 0:UCHAR, 1:UINT, 2:INT, 3:FLOAT, 4:DOUBLE
      ::endianess = INT(0)  # 0:Little, 1:Big
      ::voxSizeX = 1
      ::voxSizeY = 1
      ::voxSizeZ = 1
      ::file_name = ""      
      ::Gui()
    }

#----------------------------
    proc ::Close() \
    {
      ::win.Hide
      delvars GetObjectName(::Close)
    }
    ::Close.Comments("Will close the interface and delete the corresponding object named '"+GetObjectName(::Close)+"'.")
    
    #----------------------------
    proc ::CloseAll() \
    {
      eval boost_format( "if (exists(%1%)) { del %1%; };" ) % ::class_name 
      ::Close
    }
    ::CloseAll.Comments("Call ::Close() method and delete the class variable")
    
     #------------------------------------
     proc ::Read() {
      printn "Read"
	    if (::typePix == 0) {
     	 global::i = ReadRawImages(::dimx,::dimy,::dimz,UCHAR,::dimv,::endianess,::file_name)
    	}
      if (::typePix == 1) {
          global::i = ReadRawImages(::dimx,::dimy,::dimz,UINT,::dimv,::endianess,::file_name)
   	  }
    	if (::typePix == 2) {
        global::i = ReadRawImages(::dimx,::dimy,::dimz,INT,::dimv,::endianess,::file_name)
    	}
   	  if (::typePix == 3) {
        global::i = ReadRawImages(::dimx,::dimy,::dimz,FLOAT,::dimv,::endianess,::file_name)
    	}
    	if (::typePix == 4) {
        global::i = ReadRawImages(::dimx,::dimy,::dimz,DOUBLE,::dimv,::endianess,::file_name)
    	}  
      i.setvoxelsize(::voxSizeX, ::voxSizeY, ::voxSizeZ)

  }


  proc ::Save() {
    i.save file_name-".raw"+".ami.gz"
  }
  
  proc ::ShowImage() {
    global_new
  
    show i
  }

proc ::Gui( ) {
    global_new
  
    ::win = ParamWin("Read Raw")

    ::win.BeginBook
    ::win.AddPage("Init")
  
      ::win.BeginBox("Image dimensions and type")
        ::win.AddInt    (::dimx,0,1024)
        ::win.AddInt    (::dimy,0,1024)
        ::win.AddInt    (::dimz,0,1024)
  
        pi_typePix = ::win.AddEnum   (::typePix)
          ::win.AddEnumChoice(pi_typePix,"UCHAR")
          ::win.AddEnumChoice(pi_typePix,"UINT")
          ::win.AddEnumChoice(pi_typePix,"INT")
          ::win.AddEnumChoice(pi_typePix,"FLOAT")
          ::win.AddEnumChoice(pi_typePix,"DOUBLE")
        pi_endianess  = ::win.AddEnum   (::endianess,2)
          ::win.AddEnumChoice(pi_endianess,"Little")
          ::win.AddEnumChoice(pi_endianess,"Big")
      ::win.EndBox
      ::win.BeginBox("Voxel size")
        ::win.AddFloat    (::voxSizeX,0,10)
        ::win.AddFloat    (::voxSizeY,0,10)
        ::win.AddFloat    (::voxSizeZ,0,10)
      ::win.EndBox
  
      ::win.AddFilename(::file_name, "Read raw image", ".", "*")
    
      ::win.BeginHorizontal
        ::win.AddButton("Read",     ::Read)
        ::win.AddButton("Show",     ::ShowImage)
      ::win.EndHorizontal
      ::win.AddButton("Save as ami.gz", ::Save)
    ::win.EndBook
    ::win.AddButton("Close",::Close)
  
    ::win.update
    ::win.Display
    
  }
  ::Init
}

}
# end if (!exists(RawFloat2Ami_gui)


#----------------------------
# Main
#----------------------------

if (!exists(rrd)) {

  RawFloat2AmiClass rrd
  
  if (argc>=1) {
    printn "reading image"
    input = Image($1)
    rrd->image_name = "input"
    rrd->win.update
  }

} else {
  InfoDialog "The script seems to be already loaded."
}
