
func "Common/ScriptGui"


if (!exists(FourierSpectrumClass)) {

  Class FourierSpectrumClass : public ScriptGui \
  {

    func "FourierUtils/FourierUtils"
    ::fu = &FourierUtils
    
    //---------------------------------------------------
    proc ::Init() {
      
        ::input_name   = "","Name of the input image variable"
        #::wiki_help = "http://www.ctm.ulpgc.es/amilab_dokuwiki/dokuwiki/doku.php?id=tutorial-mainalgorithms-levelset#level_set_segmentation"

        ::html_filename = GetScriptsDir+"/FourierSpectrum/Doc/FourierSpectrum/index.html"
    }


    #-----------------------------------------------
    proc ::load_input() {
      eval "::input <<= (FLOAT)"+::input_name+";"
      if (::input_name=="BrowseImage") {
        ::input_name = "::input"
        ::win.Update(-1)
      }
  
      if (exists(::win)) {
        ::win.Update(-1)
      }
    }
    Comments( ::load_input, "Copies the input image in a local image member named 'input'")


    #-----------------------------------------------
    proc ::Run() {
      #InfoDialog "Filtro fanstastico :) !!!"
      if (!exists(::input)) {
        Infodialog "First load the input image !"
      } else {
        im_fft = ::fu.FFT(::input[0])
        ::spectrum <<= ::fu.AmiCenter(::fu.Spectrum(&im_fft))
        show ::spectrum
      }
    }

    //---------------------------------------------------
    proc ::Gui() {
    
      import = &global::ami_import;
      if (exists(::parent_panel)) {
        ::win = import->ParamPanel("FourierSpectrum",&::parent_panel)
      } else {
        ::win = import->ParamPanel("FourierSpectrum")
      }
      
      ::win.BeginBook()
    
        ::win.AddPage("Init")

          ::win.BeginBoxPanel("Input Image")
            # set the input image
            ::win.BeginHorizontal()
              ::win.AddImageChoice( &::input_name, "")
              ::win.AddButton("Load",::load_input)
            ::win.EndHorizontal()
          ::win.EndBoxPanel()

        ::win.AddPage("Param")
          ::win.AddLabel("Info:","Set your parameters here")

        ::win.AddPage("Run")
          ::win.AddButton("Run Filter",::Run)
    
        #::AddHelpPage(&::win)
    
      ::win.EndBook()
    
      ::AddStandardButtons(&::win)

      if (exists(::parent_panel)) {
        ::win.ShowPanel()
      } else {
        ::win.Display()
      }
      ::win.Update(-1)


    }
    ::Init()
    
  }
  # End of class
  
} 
# End of If
