
//
proc AnisoRGB( IMAGE in, IMAGE res, NUM threshold) {
//   --------
  ir = in[0]
  ig = in[1]
  ib = in[2]

  print "Smoothing Red Component \n"
  aniso = algorithms.ami_AnisoGS.AnisoGS()
  aniso.Init(&ir,1,threshold,0.05)
  aniso.Setmaxcurv_coeff(0.1)
  aniso.Setmincurv_coeff(0.5)
  aniso.Iterate()
  aniso.Iterate()
  ir_r = AnisoGS.GetOutput()
  del aniso

  print "Smoothing Green Component \n"
  aniso = algorithms.ami_AnisoGS.AnisoGS()
  aniso.Init(&ig,1,threshold,0.05)
  aniso.Setmaxcurv_coeff(0.1)
  aniso.Setmincurv_coeff(0.5)
  aniso.Iterate()
  aniso.Iterate()
  ig_r = aniso.GetOutput()
  del aniso

  print "Smoothing Blue Component \n"
  aniso = algorithms.ami_AnisoGS.AnisoGS()
  aniso.Init(&ib,1,threshold,0.05)
  aniso.setcoeff(0.1,0.5)
  aniso.Iterate()
  aniso.Iterate()
  ib_r = aniso.GetOutput()
  del aniso

  print "Updating the RGB result\n"
  ir_r1 = (ir_r>0)*(ir_r<255)*(ir_r)+(ir_r>=255)*255
  res.SetComponent( 0, (UCHAR) ir_r1)

  ig_r1 = (ig_r>0)*(ig_r<255)*(ig_r)+(ig_r>=255)*255
  res.SetComponent( 1, (UCHAR) ig_r1)

  ib_r1 = (ib_r>0)*(ib_r<255)*(ib_r)+(ib_r>=255)*255
  res.SetComponent( 2, (UCHAR) ib_r1)

}
