#!/home/karl/projects/bin/OS/improcess 

print "number of arguments = "; print $#; print "\n"

imagename  = $1
noise_sd   = atof($2)
numit      = atof($3)
noisetype  = atof($4)
sigma      = atof($5)
threshold  = atof($6)
if ($#>7) {
  idealimagename = $7
  i0 = Image $7
  i0.info
  compute_snr=1
} else {
  compute_snr=0
}
if ($#>8) {
  update_noise = atof($8)
} else {
  update_noise = 1 
}

imagename2=imagename-".gz"-".ami"-".vtk"-".inr"

print "--"; print imagename; print "--\n"

i = Image(imagename)
# get rid of negative points ...
i = i*(i>2)+(i<=2)*2

if (update_noise) {
  AnisoGS.init(i,sigma,threshold,0.65)
  AnisoGS.SetNoiseSD(noise_sd)
} else {
  AnisoGS.init(i,sigma,threshold,noise_sd)
}

ir=AnisoGS.GetOutput;show ir;
ir_draw.compare(i);

# for 2D
AnisoGS.setcoeff(0.5)
# for 3D
AnisoGS.setcoeff(0.5,0.2)

# Set Speckle Noise
AnisoGS.SetNoiseType(noisetype)

if (compute_snr) {
  snr_file = open(imagename2+"_snr_"+$2+"_"+$4+".dat","w")
}
lambda_file = open(imagename2+"_lambda_"+$2+"_"+$4+".dat","w")

for n=1 to numit {
  AnisoGS.iterate
  ir=AnisoGS.GetOutput;show ir;
  #ir.save imagename2+"_aniso2_"+sprint("%02.0f",n)+".ami.gz"

  // SNR
  NoiseSD=AnisoGS.GetNoiseSD;
  DAcoeff=AnisoGS.GetDAcoeff;

  if (compute_snr) {
    i0.info
    ir.info
    minx = i0.trx
    maxx = minx+i0.tx
    miny = i0.try
    maxy = miny+i0.ty
    minz = i0.trz
    maxz = minz+i0.tz
    i0_1 = i0[(minx+2):(maxx-3),(miny+2):(maxy-3),(minz+2):(maxz-3)] 
    ir_1 = ir[(minx+2):(maxx-3),(miny+2):(maxy-3),(minz+2):(maxz-3)]
    snr = SNR(ir_1,i0_1)
    snr_file.print sprint("%02.0f \t ",n)
    snr_file.print sprint("%3.3f\n ",snr)
  }
  #  snr_file.print sprint("Noise SD=%3.3f; ",NoiseSD)
  lambda_file.print sprint("%02.0f \t ",n)
  lambda_file.print sprint("%3.5f \n",DAcoeff)
}

if (compute_snr) {
  snr_file.close
}
lambda_file.close

ir.save imagename2+"_aniso2.ami.gz"

#AnisoGS.end

#quit
