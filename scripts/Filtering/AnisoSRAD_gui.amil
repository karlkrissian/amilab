#!/usr/bin/amilab

#
# Speckle Reducing Anisotropic Diffusion
#
#  Based on the paper of Yu and Acton: Speckle Reducing Anisotropic Diffusion TIP 2002
#  and
#  Oriented Speckle Reducing Anisotropic Diffusion
# `Karl Krissian, Carl-Fredrik Westin, Ron Kikinis and Kirby Vosburgh'
# IEEE Transactions on Image Processing, vol 16:5, pages 1412-1424, may 2007.
#


if (exists(SRAD_Init)) {
  printn "SRAD script already loaded, close it first"
} \
else \
{

  #------------------------------------
  proc SRAD_Init() {

    global_new
    SRAD_input_name = ""
    SRAD_output_name = "srad_result"
    SRAD_output_filename = "SRAD_result.ami.gz"
    SRAD_dt   = 0.1
    SRAD_T    = 10
    # 0: Lee, 1: Kuan, 2: Additive
    SRAD_mode = INT(1) 
    SRAD_neighborhood = INT(3)
    # Scheme, 0: explicit 1: semi-implicit
    SRAD_scheme = INT(1)

    SRAD_CreateGui()
  }
  
  #------------------------------------
  proc SRAD_Close() {
    SRAD_win.Hide
    delvars "SRAD_*_draw"
    delvars "SRAD_*"
  }
  
  #------------------------------------
  proc SRAD_load_input() {
    if (SRAD_input_name=="Image") {
      # read image using browser
      global::SRAD_input << Image
      SRAD_input_name = "SRAD_input"
      SRAD_win.update
    } else {
      eval "global::SRAD_input <<="+SRAD_input_name+";"
    }
  }

  
  #------------------------------------
  proc SRAD_CreateRoi() {
    global_new
      if (!exists(SRAD_input_draw)) {
        SRAD_Display
      }
      if (exists(SRAD_input_draw)) {
        SRAD_roi <<= SRAD_input[SRAD_input_draw]
      }
  }
  
  #------------------------------------
  proc SRAD_Filter() {
    if (!exists(SRAD_input)) {
      SRAD_load_input
      SRAD_Display
    }
    if (!exists(SRAD_roi)) {
      InfoDialog "Please select the Region of Interest (ROI)"
    }
    numit = SRAD_T/SRAD_dt
    global::SRAD_res = AnisoLeeAdd2(SRAD_input,SRAD_dt,numit,SRAD_roi)
    eval "global::"+SRAD_output_name+" <<= SRAD_res;"
  }
  
  #------------------------------------
  proc SRAD_Display() {
    global_new
    if (!exists(SRAD_input)) {
      SRAD_load_input
    }
    if (!exists(SRAD_input_draw)) {
      show SRAD_input
    }
    if exists(SRAD_res) {
      SRAD_input_draw.compare(SRAD_res)
    }
  }
  
  #------------------------------------
  proc SRAD_Save() {
    SRAD_res.save SRAD_output_filename
  }
  
  #------------------------------------
  proc SRAD_CreateGui() {
    global_new 
  
    # parameters window
    SRAD_win = ParamWin("SRAD")

    SRAD_win.BeginBook
      SRAD_win.AddPage("Param")
        SRAD_win.AddImageChoice(SRAD_input_name, "Input")
        SRAD_win.AddString(SRAD_output_name,"result name")

        SRAD_dt_id         = SRAD_win.AddFloat(SRAD_dt,0.01,10)
        SRAD_T_id          = SRAD_win.AddFloat(SRAD_T,0,100)
        
        SRAD_mode_id       = SRAD_win.AddEnum(SRAD_mode,3)
        SRAD_mode_Lee_id   = SRAD_win.AddEnumChoice(SRAD_mode_id,"Lee")
        SRAD_mode_Kuan_id  = SRAD_win.AddEnumChoice(SRAD_mode_id,"Kuan")
        SRAD_mode_Add_id   = SRAD_win.AddEnumChoice(SRAD_mode_id,"Additive")
        
        SRAD_neighborhood_id = SRAD_win.AddInt(SRAD_neighborhood,0,4)
        SRAD_scheme_id       = SRAD_win.AddEnum(SRAD_scheme,2)
        SRAD_scheme_expl_id  = SRAD_win.AddEnumChoice(SRAD_scheme_id,"Explicit")
        SRAD_scheme_impl_id  = SRAD_win.AddEnumChoice(SRAD_scheme_id,"Semi-implicit")
        
        SRAD_win.BeginBox("Controls")
          SRAD_win.BeginHorizontal
            ROI_id     = SRAD_win.AddButton("Select ROI", SRAD_CreateRoi)
            iterate_id = SRAD_win.AddButton("Filter",     SRAD_Filter)
            display_id = SRAD_win.AddButton("Display",    SRAD_Display)
          SRAD_win.EndHorizontal
        SRAD_win.EndBox

        SRAD_win.BeginBox("Save to disk")
          SRAD_win.AddString(SRAD_output_filename,"result filename")
          display_id = SRAD_win.AddButton("Save",       SRAD_Save)
        SRAD_win.EndBox
    
    SRAD_win.EndBook
    SRAD_win.AddButton("Close",             SRAD_Close)

    SRAD_win.CreateWin
    SRAD_win.Display
    SRAD_win.update
  }
  
  SRAD_Init
  if (argc==2) {
    // start with an image and an initialization
    input_arg = Image($1)
    SRAD_input_image = "input_arg"
    SRAD_output_name = $2
    NRAD_win.update
  }
} 
# endif exists(SRAD_Init)

