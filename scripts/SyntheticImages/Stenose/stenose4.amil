i = Image(FLOAT,40,40,40)

i.initvalue(0)

cx=i.tx/2
cy=i.ty/2
cz=i.tz/2


sub  = 5
nsub = 2*sub+1

f = open("ideal4.dat","w");
for z=0  to i.tz-1   {

  r = 5-2*exp(-(z-cz)*(z-cz)*(z-cz)*(z-cz)/16)
  f.print z;  f.print "\t"; f.print r; f.print "\n"

  for x=cx-5 to cx+5 {
  for y=cy-5 to cy+5 {

    np = 0

    x1 = x-sub/nsub
    y1 = y-sub/nsub
    d00 = (x1-cx)*(x1-cx)+(y1-cy)*(y1-cy)
    if (d00<r*r) { np=np+1; }

    x1 = x-sub/nsub
    y1 = y+sub/nsub
    d01 = (x1-cx)*(x1-cx)+(y1-cy)*(y1-cy)
    if (d01<r*r) { np=np+1; }

    x1 = x+sub/nsub
    y1 = y-sub/nsub
    d10 = (x1-cx)*(x1-cx)+(y1-cy)*(y1-cy)
    if (d10<r*r) { np=np+1; }

    x1 = x+sub/nsub
    y1 = y+sub/nsub
    d11 = (x1-cx)*(x1-cx)+(y1-cy)*(y1-cy)
    if (d11<r*r) { np=np+1; }

    if (np==4) {
      i.setpos(x,y,z)
      i.set(100)
    }

    if (np<4)&&(np>0) {

      n = 0
      for xn=-sub to sub {
        for yn=-sub to sub {
          x1 = x+xn/nsub
          y1 = y+yn/nsub
          d =(x1-cx)*(x1-cx)+(y1-cy)*(y1-cy)
          if (d<r*r) {  n=n+1; }
        }
      }
      i.setpos(x,y,z)
      i.set(100*n/nsub/nsub)
    }
  }
  }
  print z; print " "
}
del f

i.save "stenose4.ami.gz"

Show i
in = algorithms.ami_AddImageNoise.AddGaussianNoise(&i,0,30)
i_draw.compare(in);

print "\n Initial image \n"
f = open("initial4.dat","w")
for z=0 to i.tz-1 {
si = subimage(i,0,0,z,i.tx-1,i.ty-1,z);
sjp = si-50
surf=algorithms.ami_ComputePositiveArea(sjp)
f.print z;  f.print "\t"; f.print sqrt(surf/Pi); f.print "\n"
}
del f


id2 = EDPdilate(i,2,0.1)
in2 = in*(id2>50)+(id2<50)*(-1)

print "\n Noisy image \n"
f = open("noisy4.dat","w")
for z=0 to i.tz-1 {
si = subimage(in2,0,0,z,i.tx-1,i.ty-1,z);
sjp = si-50
surf=algorithms.ami_ComputePositiveArea(sjp)
f.print z;  f.print "\t"; f.print sqrt(surf/Pi); f.print "\n"
}
del f


is = filter(i,1,0,0,0);
print "\n Smoothed image \n"
f = open("smoothinit4.dat","w")
for z=0 to i.tz-1 {
si = subimage(is,0,0,z,i.tx-1,i.ty-1,z);
sjp = si-50
surf=algorithms.ami_ComputePositiveArea(sjp)
f.print z;  f.print "\t"; 
f.print sqrt(surf/Pi); f.print "\n"
}
del f


