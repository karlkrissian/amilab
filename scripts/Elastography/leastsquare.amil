# command line: amilab OpticFlow/test_3dflow.amil 
ami_import->Filters()

#if ($#<3) {
#  printn $0
#  printn "needs more parameters"
#  printn "1. input vectorial image"
#  printn "2. window size n (window will be (2n+1)x(2n+1))"
#}

#printn "*"
#v  = Image($1)
#n  = atof($2)
#vy0 = v[1]
#  margin=30
#  _in = _input[margin:vy0.tx-1-margin,margin:vy0.ty-1-margin,0:0]
#vy = MeanHalfSize(vy1)

proc RunLeastSquares2D_Yslope(IMAGE _input, IMAGE _output, NUM _size_x, NUM _size_y, NUM _sigma) {

  printn "1"
  # fitting base
  sizex = 2*_size_x+1
  sizey = 2*_size_y+1
  printn "1.1"
  printn sizex
  printn sizey
  b = Image(FLOAT,sizex,sizey,1,2)
  b[0] = ((FLOAT) Ypos(b)-b.ty/2)
  b[1] = 1
  printn "1.2"
  weights = b[1]*0+1
  weights.settranslation(-_size_x,-_size_y,0)
  printn "1.2"
  #wp  = SpacePos(weights)
  printn "1.3"
  #nwp = sqrt(wp[0]*wp[0]+wp[1]*wp[1])
  gaussian_size = _size_y*_sigma
  printn "1.4"
  #nwp = exp(-nwp*nwp/(gaussian_size*gaussian_size))
  mask = _input*0+1
  printn "2"
  _input.info
  b.info
  weights.info
  mask.info
  res = filters->LeastSquares(_input,b,weights,mask)
printn "3"
  _output = res[0]*100
}

#margin=40
#res_1 = res_0[margin:res_0.tx-1-margin,margin:res_0.ty-1-margin,0:0]
#show res_0
