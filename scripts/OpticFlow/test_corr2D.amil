#!../optimized/src/amilab
#
# Simple script to test 2D cross-correlation
#

if (!exists(test_corr2DClass)) {

  Class test_corr2DClass {

    proc ::Init() {
      ::input1_name =  "", "first image"
      ::input2_name =  "", "second image"
      ::coeff = 0, "coefficient between 0 and 1 to display a linear combination of the 2 inputs"

      ::step_x = INT(2), "grid spacing in X"
      ::step_y = INT(2), "grid spacing in Y"
      
      ::winsize_x = INT(5), "window half size in X (size will be 2*w+1)"
      ::winsize_y = INT(5), "window half size in Y (size will be 2*w+1)"
      ::InitGui()
    }
  
    #----------------------------
    proc ::LoadInput1() \
    {
      eval "::input1 <<="+::input1_name+";"
      if (::input1_name=="Image") {
        ::input1_name = "::input1"
        ::win.update
      }
      ::win.update
    }

    #----------------------------
    proc ::LoadInput2() \
    {
      eval "::input2 <<="+::input2_name+";"
      if (::input2_name=="Image") {
        ::input2_name = "::input2"
        ::win.update
      }
      ::win.update
    }

    #----------------------------
    proc ::Close() \
    {
      ::win.Hide
      delvars GetObjectName(::Close)
    }
    Comments( ::Close, "Will close the interface and delete the corresponding object named '"+GetObjectName(::Close)+"'.")
    
    #----------------------------
    proc ::CloseAll() \
    {
      ::Close
      if (exists(test_corr2DClass)) { del test_corr2DClass; }
    }
    Comments( ::CloseAll, "Call ::Close() method and delete the class variable")
    
    #
    proc ::init_corr2D() \
    {
      if (exists(::input1)) {
        ::corr <<=::input1*0
        ::cx   <<= ::input1*0
        ::cy   <<= ::input1*0
        ::d    <<= Image(FLOAT,::input1.tx,::input1.ty,1,3)
        ::d.initvalue(0,0,0);
      } else {
        InfoDialog "Cannot initialize the algorithm because no input has been loaded ..."
      }
    }

    #--------------------------------------------------
    proc ::corr2D() \
    {

      _u = ::d[0];
      _v = ::d[1];
      wsx = exp(ln(2)*::winsize_x)
      wsy = exp(ln(2)*::winsize_y)
      amiOFCorr2D(::input1,::input2,\
          _u,_v,::corr,::cx,::cy,0,0,\
          ::step_x,::step_y,wsx,wsy,1);
      ::d.SetComponent( 0, _u;)
      ::d.SetComponent( 1, _v;)
    }
  
  
  #--------------------------------------------------
  #--------------------------------------------------
  
    proc ::Display() {
      ::input = ::input1*(1-::coeff) + ::input2*::coeff 
      show ::input;
      #i_draw.compare(i2);
      #i_draw.compare(corr);
      #i_draw.compare(cx);
      #i_draw.compare(cy);
      if (exists(::d)) {
        ::input_draw.setvector(1,::d);
        ::input_draw.DrawVector(1,1);
        ::input_draw.DisplayVectors;
      }
    }
  
    proc ::Restart() {
      ::init_corr2D()
      ::corr2D();
      ::Display()
    }
    
    proc ::Iterate() {
      if (!exists(::d)) {
        ::init_corr2D()
      }
      ::corr2D();
      ::Display()
    }
    
    #--------------------------------------------------
    proc ::InitGui() {
      ::win = ParamWin("Test Corr 2D")
      
      ::win.BeginBook
        ::win.AddPage("Inputs")
          # set the input1 image
          ::win.BeginBoxPanel("Input1")
            ::win.BeginHorizontal
              ::win.AddImageChoice(::input1_name, "")
              ::win.AddButton("Load",::LoadInput1)
            ::win.EndHorizontal
          ::win.EndBoxPanel
  
          # set the input2 image
          ::win.BeginBoxPanel("Input2")
            ::win.BeginHorizontal
              ::win.AddImageChoice(::input2_name, "")
              ::win.AddButton("Load",::LoadInput2)
            ::win.EndHorizontal
          ::win.EndBoxPanel
  

        ::win.AddPage("Params")

          ::win.AddInt(::step_x,"step x",1,20)
          ::win.AddInt(::step_y,"step y",1,20)
          
          ::win.AddInt(::winsize_x,"winsize x",2,8)
          ::win.AddInt(::winsize_y,"winsize y",2,8)
        
          ::win.AddFloat(::coeff,"coeff",0,1)
          ::win.SetCallback(::Display)

          ::win.AddButton("Display", ::Display)
          ::win.AddButton("Restart", ::Restart)
          ::win.AddButton("Iterate", ::Iterate)
      
      ::win.EndBook
      ::win.BeginHorizontal
        ::win.AddButton("Close",      ::Close)
        ::win.AddButton("Close All",  ::CloseAll)
      ::win.EndHorizontal

      ::win.update
      ::win.Display
    }

    # Call constructor
    ::Init()
  }
  # end class test_corr2DClass
}

if (!exists(test_corr2D)) {

  test_corr2DClass test_corr2D
  
  if (argc>=2) {
    printn "reading image"
    input1 = Image($1)
    input2 = Image($2)
    test_corr2D->input1_name = "input1"
    test_corr2D->input2_name = "input2"
    test_corr2D->win.update
  }

} else {
  InfoDialog "The script seems to be already loaded."
}

