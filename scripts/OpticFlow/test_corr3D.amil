# command line: ./amilab 

import_ami

#--------------------------------------------------
step_x = INT(2)
step_y = INT(2)
step_z = INT(2)

winsize_x = INT(3)
winsize_y = INT(3)
winsize_z = INT(3)

windef = INT(1)

sphere_size = 1.5
image_size = INT(24)

corr_downsample = UCHAR(1)
corr_threads    = INT(2)

#--------------------------------------------------
proc amicorr3D(IMAGE _im1, IMAGE _im2, IMAGE _res) {
  wsx = exp(ln(2)*winsize_x)
  wsy = exp(ln(2)*winsize_y)
  wsz = exp(ln(2)*winsize_z)
  InitTime
  //print sprint("window size (%0.0f",wsx)+","+sprint("%0.0f)\n",wsy)
  if (corr_downsample) {
    res1 = Resize(_res,1+(_res.tx-1)/step_x,1+(_res.ty-1)/step_y,1+(_res.tz-1)/step_z,0)
    amiOFCorr3DNew(_im1,_im2,&res1,wsx,wsy,wsz,step_x,step_y,step_z,\
                   0,0,0,corr_threads)
    Pad(_res,res1,step_x,0,step_y,0,step_z,0)
    del res1
  } else {
    amiOFCorr3D(_im1,_im2,&_res,wsx,wsy,wsz,windef,step_x,step_y,step_z)
  }
  printn  "time spent = "+TimeSpent
  EndTime
}


#--------------------------------------------------
proc CB_CreateSphere() {
  global_new

  if exists(i_draw) { del i_draw;}
  if exists(i) { del i;}
  i = Image(FLOAT,image_size,image_size,image_size)
  func "Unsorted/AddSphere.amil"
  i.initvalue(-sphere_size)
  center=1.0*image_size/2
  AddBrightSphere(&i,center,center,center,sphere_size) 
  i2 = i*0-sphere_size
  vx=1; vy=1.5; vz=2;
  AddBrightSphere(&i2,center+vx,center+vy,center+vz,sphere_size)

  d = Image(FLOAT_VECTOR,i.tx,i.ty,i.tz)
  d.initvalue(0,0,0);
  v=d
  v.initvalue(vx,vy,vz);

    show i;
    i_draw.compare(i2);
    
    i_draw.setvector(1,d);
    i_draw.setvector(2,v);
    
    i_draw.DrawVector(1,1);
    i_draw.DrawVector(2,1);
    
    i_draw.DisplayVectors;

  local_new

}


#--------------------------------------------------
#--------------------------------------------------

# BUG??,  needed to create this function to avoid a segmentation fault ...
proc UpdateDisplay() {
  global; show i; local  
}

proc CB_Restart() {
  d.initvalue(0,0,0);
  amicorr3D(i,i2,&d);
  UpdateDisplay()
}

proc CB_Iterate() {
  amicorr3D(i,i2,&d);
  UpdateDisplay()
}

#--------------------------------------------------
w1 = ParamWin("3D Correlation parameters:")

w1.BeginBox("Image parameters")
imagesize_id = w1.AddInt(image_size,10,100)
spheresize_id = w1.AddFloat(sphere_size,0.1,40)
w1.EndBox

w1.BeginBox("Correlation parameters")
step_x_id = w1.AddInt(step_x,1,20)
step_y_id = w1.AddInt(step_y,1,20)
step_z_id = w1.AddInt(step_z,1,20)

winsize_x_id =  w1.AddInt(winsize_x,2,8)
winsize_y_id =  w1.AddInt(winsize_y,2,8)
winsize_z_id =  w1.AddInt(winsize_z,2,8)


windef_id =  w1.AddInt(windef,0,1)
downsample_id = w1.AddBoolean(corr_downsample)
threads_id    = w1.AddInt(corr_threads,1,10)

w1.EndBox

restart_id=w1.AddButton("CreateSphere", CB_CreateSphere)
restart_id=w1.AddButton("Restart", CB_Restart)
iterate_id=w1.AddButton("Iterate", CB_Iterate)

w1.CreateWin
w1.Display



