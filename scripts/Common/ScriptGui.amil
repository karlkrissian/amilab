#
# This script should define convenient functions to create
# user interfaces for the different Gui scripts.
#

func "Common/LoadIcons"
if (!exists(standard_icons)) {
  LoadIcons standard_icons
}

if (!exists(ScriptGui)) \
{

  Class ScriptGui \
  {

    # set a local reference to standard_icons
    if (exists(global::standard_icons)) {
      ::icons = &global::standard_icons
    }

    # Create the string containing the wiki page link
    proc ::AmilabWiki( STRING wikipage) {
      return = "http://www.ctm.ulpgc.es/amilab_dokuwiki"
      return += "/dokuwiki/doku.php?id=%1%" % wikipage
    }
    ::AmilabWiki.Comments("Creates the name of the wiki page")
  
    # TODO: Create the link to the documentation


    #----------------------------
    # Closes only the object instance
    #
    proc ::Close() {
      ::win.HidePanel
      delvars GetObjectName(::Close)
    }
    ::Close.Comments("Will close the interface and delete the corresponding object named '"+GetObjectName(::Close)+"'.")
      
    #----------------------------
    # Closes the class and the instance 
    #
    proc ::CloseAll() {
      global_classname = "global::%1%" % ::classname
      eval  "if (exists(%1%)) { del %1%; };"  % global_classname 
      ::Close
    }
    ::CloseAll.Comments("Call ::Close() method and delete the class variable")
      
    #----------------------------
    # Reloads the script
    #
    proc ::Reload() {
      cmd = "global; func \"%1%\";" % ::classfilename
      ::CloseAll()
      eval cmd
    }
    ::Reload.Comments("Reload script from file.")
      
    #------------------------------------
    proc ::EditScript() {
      # add wxEditor widget
      ed = ami->MainFrame.GetAmilabEditor()
      ed.FileOpen( ::classfilename)
      ed.ShowWin()
    }
    ::EditScript.Comments("Open AmilabEditor to edit the current script :)")


    #------------------------------------
    proc ::AddStandardButtons( OBJECT ::win) \
    {
      ::win.BeginHorizontal
        closeim   = ::icons._Close
        ::win.AddBitmapButton("Close",     ::Close, \
                wx.wxBitmap(closeim.Scale2(16,16)))
        delete_im = ::icons._Delete
        ::win.AddBitmapButton("Close All",  ::CloseAll, \
                wx.wxBitmap(delete_im.Scale2(16,16)))
        reload_im = ::icons._Refresh
        ::win.AddBitmapButton("Close All",      ::Reload, \
                wx.wxBitmap(reload_im.Scale2(16,16)))
        edit_im   = ::icons._EditPage
        ::win.AddBitmapButton("Edit",           ::EditScript, \
                wx.wxBitmap(edit_im.Scale2(16,16)))
      ::win.EndHorizontal  
    }

    #---------------------------------------------------
    # needs to have the variable ::wiki_help defined
    #
    proc ::LaunchWiki() {
      import = &global::ami_import
      wx1 = import->WxFunctions()
      res = wx1->LaunchDefaultBrowser(::wiki_help)
    }
    ::LaunchWiki.Comments("Launch the corresponding wiki tutorial page on the default browser.")
  
    #---------------------------------------------------
    # needs ::html and ::html_filename
    #
    proc ::HtmlHome() {
      ::html.LoadFile( ::html_filename)
    }
    ::HtmlHome.Comments("Back to the initial page.")
  
    #---------------------------------------------------
    proc ::HtmlBack() {
      res = ::html.HistoryBack()
    }
    ::HtmlBack.Comments("Back to the previous page.")
  
    #---------------------------------------------------
    proc ::HtmlForward() {
      res = ::html.HistoryForward()
    }
    ::HtmlForward.Comments("Go to the forward page.")
  

    #------------------------------------
    # Add the standard help page for Gui scripts
    #
    proc ::AddHelpPage( OBJECT ::win) \
    {
      ::win.AddPage("Help")
        ::win.BeginHorizontal
          # make nice wiki button
          wikipng = ::icons._DokuWiki
          if (wikipng.IsOk()) {
            ::win.AddBitmapButton("Wiki", ::LaunchWiki, \
            wx.wxBitmap(wikipng.Scale2(32,32)))
          } else {
            ::win.AddButton("Wiki", ::LaunchWiki)
          }
          
          ::win.AddBitmapButton("Home", ::HtmlHome, wx.wxBitmap(::icons._Home))
          ::win.AddBitmapButton("<--",  ::HtmlBack, wx.wxBitmap(::icons._Back))
          ::win.AddBitmapButton("-->",  ::HtmlForward, \
            wx.wxBitmap(::icons._Forward))
        ::win.EndHorizontal
        # add html widget
        d = ::win.CurrentParent()
        ::html = wx.wxHtmlWindow(&d)
        ::html.LoadFile( ::html_filename)
        ::win.AddWidget(&::html,1)
    }

  }
}
