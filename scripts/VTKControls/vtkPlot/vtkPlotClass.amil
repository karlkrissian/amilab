
func "Common/ScriptGui"

if (!exists(vtkPlotClass)) {

  Class vtkPlotClass : public ScriptGui \
  {
    func "VTKControls/vtkPen/vtkPenClass"
    vtkPenClass ::penctrl

    func "VTKControls/vtkAxis/vtkAxisClass"
    vtkAxisClass ::xaxisctrl
    vtkAxisClass ::yaxisctrl
    
    func "Variable/ObjectIO"
    #===========================================================================
    # Set parameters here
    Class ::ParamClass : public ObjectIO {

        ::description = "Default parameters", \
                        "Description of the set of parameters"

        ::label     = "label",  "Plot label"
        ::show_axes = UCHAR(0), "Show axes guis"
        ::visible   = UCHAR(1), "Visible"

        #-----------------------------------------------------------------------
        # copy parameters
        proc ::__assign__( VAR p) {
          ::label     = p.label
          ::show_axes = p.show_axes
          ::visible   = p.visible
        }
    }

    #---------------------------------------------------------------------------
    proc ::Init() {
      ::plot_name = ""
      ::ParamClass ::params
      #::wiki_help = "http://www.ctm.ulpgc.es/amilab_dokuwiki/dokuwiki"+
      # "/doku.php?id=tutorial-mainalgorithms-levelset#level_set_segmentation"
      ::html_filename = GetScriptsDir+\
                        "/vtkPlot/Doc/vtkPlot/index.html"
    }

    #---------------------------------------------------------------------------
    proc ::SetShowAxis( NUM v) \
    {
      ::params.show_axes=v
    }

    #---------------------------------------------------------------------------
    proc ::SetPlot( OBJECT obj) \
    {
      if obj.IsA("vtkPlot") {
        del ::vtkplot
        ::vtkplot = &obj
      } else {
        InfoDialog "vtkPlotClass.SetPlot(obj): wrong object type"
      }
      ::penctrl.SetPen(::vtkplot.GetPen())
      if (::params.show_axes) {
        ::xaxisctrl.SetAxis(::vtkplot.GetXAxis())
        ::yaxisctrl.SetAxis(::vtkplot.GetYAxis())
      }
      ::Update()
    }

    #---------------------------------------------------------------------------
    proc ::SetChangedCallback( VAR ccb ) \
    {
      ::changed_cb = &ccb
      ::penctrl.SetChangedCallback(ccb)
    }

    #---------------------------------------------------------------------------
    proc ::Modified() \
    {
      if (exists(::changed_cb)) {
        ::changed_cb()
      }
    }

    #---------------------------------------------------------------------------
    proc ::CB_Label( ) \
    {
      if (exists(::vtkplot)) {
        ::vtkplot.SetLabel(::params.label)
        ::Modified()
      }
    }

    #---------------------------------------------------------------------------
    proc ::CB_Visible( ) \
    {
      ::vtkplot.SetVisible(::params.visible)
      ::Modified()
    }

    #---------------------------------------------------------------------------
    proc ::CB_Plot( ) \
    {
      eval "::SetPlot(%1%);" % ::plot_name
      ::Update()
    }


    #---------------------------------------------------------------------------
    proc ::Update() \
    {
      ::params.label   = ::vtkplot.GetLabel().convert_string()
      ::params.visible = ::vtkplot.GetVisible()
      ::win.Update(-1)
    }


    #---------------------------------------------------------------------------
    # create the gui on a ParamPanel
    proc ::AddGui( OBJECT win) \
    {
      if (!exists(::win)) {
        ::win = &win
      }
      win.BeginBoxPanel("vtkPlot control")
        win.BeginHorizontal()
          win.AddString(::params.label,"Label")
          win.SetCallback(::CB_Label)

          win.AddBoolean(::params.visible,"Visible")
          win.SetCallback(::CB_Visible)
        win.EndHorizontal()
      
        # Add Pen Gui
        ::penctrl.AddGui(::win)
        if (::params.show_axes) {
          # Add Axes Gui
          ::xaxisctrl.AddGui(::win)
          ::yaxisctrl.AddGui(::win)
        }
      win.EndBoxPanel()
    }

    #---------------------------------------------------------------------------
    proc ::Gui() {
    
      if (exists(::parent_panel)) {
        ::win = ParamPanel("vtkPlot",&::parent_panel)
      } else {
        ::win = ParamPanel("vtkPlot")
      }
      
      ::win.BeginBook()
        ::win.AddPage("Main")
          # Select Plott
          ::win.AddAMIObjectChoice( &::plot_name, "", "vtkPlot")
          ::win.SetCallback(::CB_Plot)
          # add gui
          ::AddGui(::win)
        # add page for saving/loading parameters
        ::AddParamPage(&::win)

        # add help page
        if wx.wxFileName(::html_filename).FileExists() {
          ::AddHelpPage(&::win)
        }
    
      ::win.EndBook()
    
      ::AddStandardButtons(&::win)

      if (exists(::parent_panel)) {
        ::win.ShowPanel()
      } else {
        ::win.Display()
      }
      ::win.Update(-1)


    }
    ::Init()
    
  }
  # End of class
  
} 
# End of If
