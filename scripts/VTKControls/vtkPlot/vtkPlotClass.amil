
func "Common/ScriptGui"

if (!exists(vtkPlotClass)) {

  Class vtkPlotClass : public ScriptGui \
  {
    func "VTKControls/vtkPen/vtkPenClass"
    vtkPenClass ::penctrl

    func "VTKControls/vtkAxis/vtkAxisClass"
    vtkAxisClass ::xaxisctrl
    vtkAxisClass ::yaxisctrl
    
    func "Variable/ObjectIO"
    #===========================================================================
    # Set parameters here
    Class ::ParamClass : public ObjectIO {

        ::description = "Default parameters", \
                        "Description of the set of parameters"


        #-----------------------------------------------------------------------
        # copy parameters
        proc ::__assign__( VAR p) {
        }
    }

    #---------------------------------------------------------------------------
    proc ::Init() {
      ::plot_name = ""
      ::ParamClass ::params
      #::wiki_help = "http://www.ctm.ulpgc.es/amilab_dokuwiki/dokuwiki"+
      # "/doku.php?id=tutorial-mainalgorithms-levelset#level_set_segmentation"
      ::html_filename = GetScriptsDir+\
                        "/vtkPlot/Doc/vtkPlot/index.html"
    }

    #---------------------------------------------------------------------------
    proc ::SetPlot( OBJECT obj) \
    {
      if obj.IsA("vtkPlot") {
        del ::vtkplot
        ::vtkplot = &obj
      } else {
        InfoDialog "vtkPlotClass.SetPlot(obj): wrong object type"
      }
      ::penctrl.SetPen(::vtkplot.GetPen())
      ::xaxisctrl.SetAxis(::vtkplot.GetXAxis())
      ::yaxisctrl.SetAxis(::vtkplot.GetYAxis())
      ::Update()
    }

    #---------------------------------------------------------------------------
    proc ::CB_Plot( ) \
    {
      eval "::SetPlot(%1%);" % ::plot_name
      ::Update()
    }


    #---------------------------------------------------------------------------
    proc ::Update() \
    {
      #::win.SetLabelValue(::nbplots_id,\
                          #"%1%" % ::vtkplot.GetNumberOfPlots())
      #::win.SetLabelValue(::nbaxes_id,\
                          #"%1%" % ::vtkplot.GetNumberOfAxes())
      #::params.show_legend = ::vtkplot.GetShowLegend()
      #::params.title       = ::vtkplot.GetTitle().convert_string()
      ::win.Update(-1)
    }


    #---------------------------------------------------------------------------
    # create the gui on a ParamPanel
    proc ::AddGui( OBJECT win) \
    {
      if (!exists(::win)) {
        ::win = &win
      }
      win.BeginBoxPanel("vtkPlot control")
        #::nbplots_id   = win.AddLabel("Number of Plots", "")
        #::nbaxes_id    = win.AddLabel("Number of Axes", "")
        #win.AddBoolean(::params.show_legend,"Show Legend")
        #win.SetCallback(::CB_ShowLegend)
        #win.AddString(::params.title,"Title")
        #win.SetCallback(::CB_Title)
        # Add Pen Gui
        ::penctrl.AddGui(::win)
        # Add Axes Gui
        ::xaxisctrl.AddGui(::win)
        ::yaxisctrl.AddGui(::win)
      win.EndBoxPanel()
    }

    #---------------------------------------------------------------------------
    proc ::Gui() {
    
      if (exists(::parent_panel)) {
        ::win = ParamPanel("vtkPlot",&::parent_panel)
      } else {
        ::win = ParamPanel("vtkPlot")
      }
      
      ::win.BeginBook()
        ::win.AddPage("Main")
          # Select Plott
          ::win.AddAMIObjectChoice( &::plot_name, "", "vtkPlot")
          ::win.SetCallback(::CB_Plot)
          # add gui
          ::AddGui(::win)
        # add page for saving/loading parameters
        ::AddParamPage(&::win)

        # add help page
        if wx.wxFileName(::html_filename).FileExists() {
          ::AddHelpPage(&::win)
        }
    
      ::win.EndBook()
    
      ::AddStandardButtons(&::win)

      if (exists(::parent_panel)) {
        ::win.ShowPanel()
      } else {
        ::win.Display()
      }
      ::win.Update(-1)


    }
    ::Init()
    
  }
  # End of class
  
} 
# End of If
