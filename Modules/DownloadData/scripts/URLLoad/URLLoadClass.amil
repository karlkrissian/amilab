
func "Common/ScriptGui"

if (!exists(DownloadData)) {
  func "../Load_DownloadData"
}


if (!exists(URLLoadClass)) {

  Class URLLoadClass : public ScriptGui \
  {
    
    //---------------------------------------------------
    proc ::Init() {
      
      ::url_name = "", "Name of the url to load"
      #::wiki_help = "http://www.ctm.ulpgc.es/amilab_dokuwiki/dokuwiki/doku.php?id=tutorial-mainalgorithms-levelset#level_set_segmentation"

      ::output_path = ".",    "Save Path Folder"
      ::output_filename = "", "Output filename"
      ::output_imagename = "", "Output image name"
        
      ::html_filename = GetScriptsDir+"/URLLoad/Doc/URLLoad/index.html"
    }


    #---------------------------------------------
    proc ::LoadDenoisingImage( STRING imname ) {
      ::url_name = "http://decsai.ugr.es/~javier/denoise/%1%.png" % imname
      ::OnUrl();::ReadImage()
    }


    #---------------------------------------------

    for n in "lena","barbara","boat","fingerprint","house","peppers256" \
    {
      eval "proc ::Load_%1%( ) { ::LoadDenoisingImage(\"%1%\"); };" % n
    }

    #---------------------------------------------
    proc ::LoadDenoisingIcon( STRING imname ) \
    {
      icon_filename = op_system.GetCurrentScriptDir()+"/%1%_32x32.png" % imname
      if wx.wxFileName(icon_filename).FileExists() {
        eval "::%1%_icon = wx.wxImage(icon_filename);" % imname
      } else {
        if !exists(::_Picture) {
          ::icons.LoadIconPNG("Picture")
        }
        eval "::%1%_icon = &::icons._Picture;" % imname
      }
    }


    #---------------------------------------------
    proc ::AddDenoisingButton( STRING imname) \
    {
      ::LoadDenoisingIcon(imname);
      eval "::AddBitmapButton(&::win, &::%1%_icon,32, \"Load_%1%\");" % imname
      ::win.SetPositionProp(-1,2)
    }

    #---------------------------------------------
    proc ::AddDenoisingButtons( ) \
    {
      ::win.BeginBoxPanel("Natural Denoising Images")
        ::win.BeginHorizontal()
        c=0
        for n in "lena","barbara","boat","fingerprint","house","peppers256" {
          ::AddDenoisingButton(n)
          c++
          if (c%4)==0 {
            ::win.EndHorizontal()
            ::win.BeginHorizontal()
          }
        }
        ::win.EndHorizontal()
      ::win.EndBoxPanel()
    }

    #---------------------------------------------
    proc ::URL2File( STRING urlstr, STRING fname) \
    {
      url = wxURL(urlstr)
      if url.IsOk() {
        in_st = url.GetInputStream()
        if (in_st.IsOk()) {
          out_file = wxFileOutputStream(fname)
          canread = in_st.CanRead()
          while canread {
            in_st.Read(&out_file)
            SetStatusText("%1% Kb read from url stream" % (in_st.LastRead()/1000))
            canread = in_st.CanRead()
          }
        } else {
          printn "input stream not OK"
        }
      } else {
        InfoDialog "url [%1%] not valid" % urlstr
      }
    }

    #---------------------------------------------
    proc ::URL2Icon( STRING urlstr, STRING fname) \
    {
      icon_filename = op_system.GetCurrentScriptDir()+"/%1%_32x32.png" % fname
      url = wxURL(urlstr)
      if url.IsOk() {
        in_st = url.GetInputStream()
        if (in_st.IsOk()) {
          SetStatusText("Reading image")
          out_wxim = wx.wxImage(&in_st)
          if out_wxim.IsOk() {
            SetStatusText("Image OK, resizing")
            wxim_32 = out_wxim.Scale(32,32,wx.wxIMAGE_QUALITY_HIGH)
            saved = wxim_32.SaveFile(icon_filename)
            SetStatusText("file %1% saved = " % icon_filename + " %1%" % saved)
          }
        } else {
          printn "input stream not OK"
        }
      } else {
        InfoDialog "url [%1%] not valid" % urlstr
      }
    }

    #-----------------------------------------------
    proc ::OnUrl() \
    {
      ::output_filename  = wx.FromWxString(wx.wxFileName(::url_name).GetFullName())
      ::output_imagename = wx.FromWxString(wx.wxFileName(::url_name).GetName())
      ::win.Update(-1)
    }

    #-----------------------------------------------
    proc ::SaveFile() \
    {
      ::URL2Icon(::url_name,::output_filename)
    }

    #-----------------------------------------------
    proc ::SaveIcon() \
    {
      ::URL2File(::url_name,::output_path+"/"+::output_filename)
    }

    #-----------------------------------------------
    proc ::ReadImage() \
    {
      wx_fname = wx.wxFileName.CreateTempFileName(::output_filename)
      fname = wx.FromWxString(wx_fname)
      SetStatusText("temporary file is "+fname)
      ::URL2File(::url_name,fname)
      imname = wx.FromWxString(wx.wxFileName(::output_filename).GetName())
      cmd= "global::"+imname+" = Image \"%1%\";" % fname
      SetStatusText(cmd)
      eval cmd
      cmd= "show global::"+imname+";"
      SetStatusText(cmd)
      eval cmd
    }
    
    #---------------------------------------------------
    proc ::Gui() {
    
      if (exists(::parent_panel)) {
        ::win = ParamPanel("URLLoad",&::parent_panel)
      } else {
        ::win = ParamPanel("URLLoad")
      }
      

      ::win.AddString(&::url_name,"URL")
      ::win.SetCallback(&::OnUrl)

      ::win.AddDirname(&::output_path, "Path")
      ::win.AddString( &::output_filename,  "Filename")
      ::win.AddString( &::output_imagename, "Image name")
    
      ::win.AddButton("ReadImage",&::ReadImage)
      ::win.BeginHorizontal()
        ::win.AddButton("SaveFile", &::SaveFile)
        ::win.AddButton("SaveIcon", &::SaveIcon)
      ::win.EndHorizontal()

      if wx.wxFileName(::html_filename).FileExists() {
        ::AddHelpPage(&::win)
      }

      ::win.BeginBook()
        ::win.AddPage("1")
          ::AddDenoisingButtons()
        ::win.AddPage("2")
      ::win.EndBook()
    
      ::AddStandardButtons(&::win)

      if (exists(::parent_panel)) {
        ::win.ShowPanel()
      } else {
        ::win.Display()
      }
      ::win.Update(-1)


    }
    ::Init()
    
  }
  # End of class
  
} 
# End of If
