#!/usr/bin/amilab

#SetDebugOn
#SetVerboseOn

NoMessageDialog(1)

# Hide main frame
ami.MainFrame.ShowWin(0)

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# test_continuousmorphology.amil
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check the following methods:
#                              - SetScheme
#                              - SetLimits
#                              - EDP
#                              - Dilate
#                              - Erode
#                              - Open
#                              - Close
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

func "ctest/ctest_config.amil"

OK = 1 # The test was successful

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn "\t\t ******************************************"
printn "\t\t *                 WARNING                *"
printn "\t\t ******************************************"
printn "\t\t *                                        *"
printn "\t\t * This test does not perform useful work *"
printn "\t\t * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ *"
printn "\t\t *                                        *"
printn "\t\t * Just check:                            *"
printn "\t\t * - The parser does not generate errors. *"
printn "\t\t * - Segmentation fault does not occur.   *"
printn "\t\t *                                        *"
printn "\t\t ******************************************\n"

printn "Import filters (ami_import->Filters()).\n"
ami_import->Filters()

printn "Create an object of class ContinuousMorphology(morph = filters.ContinuousMorphology()).\n"
morph = filters.ContinuousMorphology()

# Create initial image
func "SyntheticImages/create_torus_gui.amil"
CTClass CT

DIMX=100
DIMY=100
DIMZ=100
BG=0
FG=0
R=20
r=4

printn " Create synthetic imaged:"
printn "\t dimx=%1%" % DIMX
printn "\t dimy=%1%" % DIMY
printn "\t dimz=%1%" % DIMZ
printn "\t bg=%1%" % BG
printn "\t fg=%1%" % FG
printn "\t R=%1%"  % R
printn "\t r=%1%"  % r

ctobject->dimx = 60
ctobject->dimy = 60
ctobject->dimz = 30
ctobject->bg = 0
ctobject->fg = 100
ctobject->R = 20
ctobject->r = 4
ctobject->Create()

LOWERLIMIT=0
UPPERLIMIT=100

printn "Limits:\n"
printn "\t Lower limit: %1% \n" % LOWERLIMIT
printn "\t Upper limit: %1% \n" % UPPERLIMIT

printn "Set limits (morph.SetLimits(LOWERLIMIT,UPPERLIMIT)).\n"
morph.SetLimits(LOWERLIMIT,UPPERLIMIT)

SIZE=2
STEP=0.5

printn "Partial Derivative Equation parameters:\n"
printn "\t Size: %1% \n" % SIZE
printn "\t Step: %1% \n" % STEP

printn "Image morphological greyscale dilatation using and the scheme of Partial Derivative Equation and the scheme of Brockett & Maragos(img=morph.Dilate(&torus,SIZE,STEP)).\n"
img=morph.Dilate(&torus,SIZE,STEP)

printn "Image morphological greyscale erosion using and the scheme of Partial Derivative Equation and the scheme of Brockett & Maragos(img1=morph.Erode(&torus,SIZE,STEP)).\n"
img1=morph.Erode(&torus,SIZE,STEP)

printn "Image morphological greyscale opening using and the scheme of Partial Derivative Equation and the scheme of Brockett & Maragos(img2=morph.Open(&torus,SIZE,STEP)).\n"
img2=morph.Open(&torus,SIZE,STEP)

printn "Image morphological greyscale closing using and the scheme of Partial Derivative Equation and the scheme of Brockett & Maragos(img3=morph.Close(&torus,SIZE,STEP)).\n"
img3=morph.Close(&torus,SIZE,STEP)

SCHEME=1
printn "Scheme: %1% \n" % SCHEME

printn "Set the scheme to Osher & Sethian(morph.SetScheme(SCHEME)).\n"
morph.SetScheme(SCHEME)

printn "Image morphological greyscale dilatation using and the scheme of Partial Derivative Equation and the scheme of Osher & Sethian(img4=morph.Dilate(&torus,SIZE,STEP)).\n"
img4=morph.Dilate(&torus,SIZE,STEP)

printn "Image morphological greyscale erosion using and the scheme of Partial Derivative Equation and the scheme of Osher & Sethian(img5=morph.Erode(&torus,SIZE,STEP)).\n"
img5=morph.Erode(&torus,SIZE,STEP)

printn "Image morphological greyscale opening using and the scheme of Partial Derivative Equation and the scheme of Osher & Sethian(img6=morph.Open(&torus,SIZE,STEP)).\n"
img6=morph.Open(&torus,SIZE,STEP)

printn "Image morphological greyscale closing using and the scheme of Partial Derivative Equation and the scheme of Osher & Sethian(img7=morph.Close(&torus,SIZE,STEP)).\n"
img7=morph.Close(&torus,SIZE,STEP)

printn "Image morphological greyscale dilatation using and the scheme of Partial Derivative Equation and the scheme of Osher & Sethian(img8=morph.EDP(&torus,SIZE,STEP,2)).\n"
img8=morph.EDP(&torus,SIZE,STEP,2)

printn "Image morphological greyscale erosion using and the scheme of Partial Derivative Equation and the scheme of Osher & Sethian(img9=morph.EDP(&torus,SIZE,STEP,1)).\n"
img9=morph.EDP(&torus,SIZE,STEP,1)

printn "Image morphological greyscale opening using and the scheme of Partial Derivative Equation and the scheme of Osher & Sethian(img10=morph.EDP(&torus,SIZE,STEP,3)).\n"
img10=morph.EDP(&torus,SIZE,STEP,3)

printn "Image morphological greyscale closing using and the scheme of Partial Derivative Equation and the scheme of Osher & Sethian(img11=morph.EDP(&torus,SIZE,STEP,4)).\n"
img11=morph.EDP(&torus,SIZE,STEP,4)

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ctest.PrintTestResult( OK ) 

#quit

