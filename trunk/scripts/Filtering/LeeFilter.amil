
#
# Lee Filter for additive noise
#
proc LeeFilter(IMAGE input, IMAGE out, NUM size, NUM noisevar) {

  _i1 = localmean2(input,size)
  _i2 = localSD2(input,_i1,size)

  _i2=_i2*_i2
  _k = (_i2>noisevar)*(_i2-noisevar)/_i2
  out = _i1 + (input-_i1)*_k

}


#
# Lee Filter for multiplicative noise
#
proc LeeFilter2(IMAGE input, IMAGE out, NUM size, NUM noisevar) {

  _i1 = localmean2(input,size)
  _i2 = localSD2(input,_i1,size)

  _i1_2 = _i1*_i1 
  _i2   =_i2*_i2

  _q = (_i2+_i1_2)/(noisevar+1)-_i1_2
  _q = _q*(_q>0)

  _k1 = _i1_2*noisevar+_q
  _k1 = _k1*(_k1>0.001)+(_k1<=0.001)*0.001
  _k = _q/_k1

  out = _i1 + (input-_i1)*_k

}

#
# Kuan Filter for multiplicative noise
#
proc KuanFilter(IMAGE input, IMAGE out, NUM size, NUM noisevar) {

  _i1 = localmean2(input,size)
  _i2 = localSD2(input,_i1,size)

  _i1_2 = _i1*_i1 
  _i2=_i2*_i2

  _q = (_i2+_i1_2)/(noisevar+1)-_i1_2

  _k1 = (_i1_2+_q)*noisevar+_q
  _k1 = _k1*(_k1>0.001)+(_k1<=0.001)*0.001
  _k = _q/_k1


  out = _i1 + (input-_i1)*_k

}


proc KuanFilter2(IMAGE input, IMAGE out, NUM size, NUM noisevar) {

print "1.1\n"
  _i1 = localmean2(input,size)
print "1.2\n"
  _i2 = localSD2(input,_i1,size)

print "2\n"
  _i1_2 = _i1*_i1 
  _i2=_i2*_i2

  _vf = (_i2+_i1_2)/(noisevar+1)-_i1_2
  _vf = _vf*(_vf>0)

  _vg = _i2
  _vg = _vg*(_vg>0.001)+(_vg<=0.001)*0.001
  _k = _vf/_vg


  out = _i1 + (input-_i1)*_k

}


