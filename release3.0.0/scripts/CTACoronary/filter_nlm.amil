#!/usr/bin/amilab

#
# if no arguments uses 4 threads and Images/initial_crop.vtk as input
# if 1 arguments: input filename
# if 2 arguments: input filename and number of threads


numthreads = 4

printn argc

if (argc==2) {
  input_name = $1
  printn $2
  numthreads = atof($2)
} else {
  if (argc==1) {
    input_name = $1
  } else {
    input_name = "Images/initial_crop.vtk"
  }
} 

emptyargs

func "Filtering/NLmeans_gui.amil"


input = Image (input_name)

InitTime

NLM_init( input)

# now set the parameters


    NLM_noisetype = 0 // additive Gaussian
    NLM_threads   = numthreads
    printn NLM_threads

    # Match window area
    NLM_t = 4
    # Threshold for distance 
    NLM_h = 55

    # Sigma: standard deviation of the Gaussian smoothing for fast version
    NLM_sigma = 0.4 // around 1 voxel


# Run the filter (fast version)


CB_NLM_FastFilter()


EndTime

# save the result

NLM_res.save input_name-".vtk"-".gz"-".ami"+"_FastNLmeans.vtk"

quit
