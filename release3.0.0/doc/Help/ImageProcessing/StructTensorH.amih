

***** StructTensor: Structure Tensor computation usgin both gradient and Hessian matrix *****

token(s):
T_StructTensorH  StructTensorH

rule(s):
commande -> T_StructTensorH ( VAR_IMAGE, expr, expr)
commande -> T_StructTensorH ( VAR_IMAGE, expr, expr,expr_image)

parameter(s):
  #1 VAR_IMAGE : input scalar image (2D or 3D)
  #2 expr      : sigma,  Gaussian convolution
  #3 expr      : beta
  #4 expr_image: mask

description(s):
This function computes the structure tensor of the image I,
defined by 

  T_sigma = beta*G.G^T + H^2

which is
the matrix defined by the cross-product
of the smoothed gradient of the image (smoothed with a Gaussian
convolution of standard deviation sigma) plus the 
squared Hessian matrix, the gradient cross-product is weighted
by the coeffient beta.
The function then computes the eigenvalues and the eigenvectors
of this matrix, and saves them in the following 
variables, in the case of 3D images:
- imagename_STHvep1: normalized eigenvector associated with the 
 			maximal eigenvalue
- imagename_STHvep2:
- imagename_STHvep3: normalized eigenvector associated with the 
			minimal eigenvalue
- imagename_STHvap1: maximal eigenvalue
- imagename_STHvap2:
- imagename_STHvap3: minimal eigenvalue
where imagename is the name of the image variable given by
the first parameter.

Example(s):
[AMILab] i = Image "tore.inr.gz"
[AMILab] StructTensorH(i,1,1)
[AMILab] Show vars
VARIABLES:
  0           i         image    
  1    i_STHvep1         image    
  2    i_STHvep2         image    
  3    i_STHvep3         image    
  4    i_STHvap1         image    
  5    i_STHvap2         image    
  6    i_STHvap3         image    
[AMILab] Show i
[AMILab] i_draw.setvector(1,i_STHvep1)
[AMILab] i_draw.setvector(2,i_STHvep2)
[AMILab] i_draw.setvector(3,i_STHvep3)


******************************