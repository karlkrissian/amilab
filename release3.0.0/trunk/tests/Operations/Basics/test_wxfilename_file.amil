#!/usr/bin/amilab

#SetDebugOn
#SetVerboseOn

NoMessageDialog(1)

# Hide main frame
ami.MainFrame.ShowWin(0)

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# test_wxfilename_file.amil
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check the following methods:
#                              - constructor
#                              - FileExists
#                              - IsFileExecutable
#                              - IsFileReadable
#                              - IsFileWritable
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

func "ctest/ctest_config.amil"

OK = 1 # The test was successful

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
printn "\t\t ******************************************"
printn "\t\t *                 WARNING                *"
printn "\t\t ******************************************"
printn "\t\t *                                        *"
printn "\t\t * This test does not perform useful work *"
printn "\t\t * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ *"
printn "\t\t *                                        *"
printn "\t\t * Just check:                            *"
printn "\t\t * - The parser does not generate errors. *"
printn "\t\t * - Segmentation fault does not occur.   *"
printn "\t\t *                                        *"
printn "\t\t ******************************************\n"

printn "Constructor: MODE 3 - a directory name, a file name, a file extension - (file=wx.wxFileName(\"./\",\"test_wxfilename_file\",\"amil\")).\n"
file=wx.wxFileName("./","test_wxfilename_file","amil")

print "Get the full path (file.GetFullPath()):\n"
VAL = file.GetFullPath()

print "\t The full path: - %1% -\n" % VAL

printn "Check if the file with this name exists (file._FileExists()).\n"
if (file._FileExists()) {
  printn  "\t The file exist."
} else  {
  printn  "\t The file don't exist."
}

printn "Check if a file with this name exists and if this process has execute permissions on it (file.IsFileExecutable()).\n"
if (file.IsFileExecutable()) {
  printn  "\t The file exist and is executable."
} else  {
  printn  "\t The file exist and is not executable."
}

printn "Check if a file with this name exists and if this process has read permissions on it (file.IsFileReadable()).\n"
if (file.IsFileReadable()) {
  printn  "\t The file exist and is readable."
} else  {
  printn  "\t The file don't exist or is not readable."
}

printn "Check if a file with this name exists and if this process has write permissions on it (file.IsFileWritable()).\n"
if (file.IsFileWritable()) {
  printn  "\t The file exist and is writable."
} else  {
  printn  "\t The file don't exist or is not writable."
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ctest.PrintTestResult( OK ) 

#quit

