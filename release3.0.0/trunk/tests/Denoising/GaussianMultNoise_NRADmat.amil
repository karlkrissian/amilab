#!/usr/bin/amilab
#
#
# Test of the AnisoGS code with Additive Gaussian noise
#

input_noise = Image "synthetic_torus_addGauss15.ami.gz"


# filter with AnisoNRAD_gui
func "Filtering/AnisoNRAD_gui.amil"

# set all the necessary parameters
NRAD_input_name = "input_noise"
# suggested 1/6 in 3D but taking smaller value because of oscillations
NRAD_dt   = 0.06
NRAD_t    = 2.0
# 0: scalar diffusion, 1: matrix diffusion equation
NRAD_equation_type = 0
# 0: Lee, 1: Kuan, 2: Additive, 3: MRI
NRAD_scalar_mode   = 2
NRAD_neighborhood  = 1
# Scheme, 0: explicit 1: semi-implicit
NRAD_scheme        = 1

NRAD_win.update

# load input image and filter
NRAD_ReloadInput
# use the full image as ROI, not perfect but ok
#NRAD_GetRoi 
NRAD_roi <<= NRAD_input[18:32,18:32,0:NRAD_input.tz-1]
NRAD_Filter

#NRAD_Display

# read pre-processed result
res = Image "synthetic_torus_addGauss15_NRADscal.ami.gz"

l_d = mean((res-NRAD_res)*(res-NRAD_res))
printn boost_format("\t *******  Filter Test Result:  %1%") % (l_d<0.00000001)

