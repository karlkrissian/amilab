#!/usr/bin/amilab

id = atof($1)

import_vtk

datasetdir=sprint("dataset%02.0f/",id)

i0 = Image(sprint(datasetdir+"image%02.0f_FastNLmeans.vtk",id))

pS      = Surface[4]
pE      = Surface[4]
vessels = Surface[4]
v_gt    = Surface[4]

#if (id<=7) {
  rec = Surface(datasetdir+"PolyData/vessels_recons.vtk")
#} else {
#  rec = Surface()
#}
rec.SetOpacity(0.7)
show rec

#if (0) {
show i0
i0_draw.setGLwin(rec_draw)


#pdf = Image (sprint(datasetdir+"cistib/image%02.0f-crop-den-PDF-01.vtk",id))
#i0_draw.compare(pdf)
#}

#-----------------------------------------------------------
proc ReadPoint( STRING st, NUM x, NUM y, NUM z) {

# Old implementation:
#  f = open(st,"r")
#  f.read(x)
#  f.read(y)
#  f.read(z)

  f = File(st,"r")
  x = f.read_float()
  y = f.read_float()
  z = f.read_float()
  
  printn "Point read:"+sprint("%3.2f",x)+\
        sprint(", %3.2f",y)+sprint(", %3.2f",z);
}

#---------------------------------------------------
proc Skel_ReadPoint(NUM vid, NUM ptid, \
                    NUM x, NUM y, NUM z) {
  if (ptid == 0) { ptname="A";}
  if (ptid == 1) { ptname="B";}
  if (ptid == 2) { ptname="S";}
  if (ptid == 3) { ptname="E";}
  if (ptid == 4) { ptname="1";} // starting estimated points
  if (ptid == 5) { ptname="2";}
  vesseldir = sprint( datasetdir+\
                      "vessel%0.0f",vid)
  ReadPoint(vesseldir+"/point"+ptname+".txt",\
            &x,&y,&z)
}


px=0; py=0; pz=0;
ReadPoint(datasetdir+"/point1.txt", &px,&py,&pz)
p1 = vtkSphere(0.5,10,10,px,py,pz)
p1.SetColor(0,0,255)
rec_draw += p1

ReadPoint(datasetdir+"/point2.txt", &px,&py,&pz)
p2 = vtkSphere(0.5,10,10,px,py,pz)
p2.SetColor(0,0,255)
rec_draw += p2


for i=0 to 3 {

  local::Px1=0; local::Py1=0; local::Pz1=0;
  local::Px2=0; local::Py2=0; local::Pz2=0;
  Skel_ReadPoint(i,2, &Px1,&Py1,&Pz1)
  Skel_ReadPoint(i,3, &Px2,&Py2,&Pz2)

  tmp = vtkSphere(0.5,10,10,Px1,Py1,Pz1)
  pS[i] = tmp
  del tmp
  pS[i].SetColor(0,255,0)
  rec_draw += pS[i]

  tmp = vtkSphere(0.5,10,10,Px2,Py2,Pz2)
  pE[i] = tmp
  del tmp
  pE[i].SetColor(0,0,255)
  rec_draw += pE[i]

  if (id<=7) {
    v_gt[i]    = ReadCTALine(sprint(datasetdir+"vessel%0.0f/reference.txt",i))
    v_gt[i].SetColor(255,0,0)
    rec_draw += v_gt[i]
  }

  //
  vessels[i] = ReadCTALine(sprint(datasetdir+"vessel%0.0f/result.txt",i),1)
  rec_draw += vessels[i]

}


# Reconstruction of the vessels
printn "Reconstructing vessel 1"
v_rad = Image(FLOAT,vessels[0].NbPoints(),1,1)
v_rad = 1
recons = LineRecons(vessels[0],i0,v_rad)

printn "Reconstructing vessel 2"
v_rad <<= Image(FLOAT,vessels[1].NbPoints(),1,1)
v_rad = 1
recons = max(recons,LineRecons(vessels[1],i0,v_rad))

printn "Reconstructing vessel 3"
v_rad <<= Image(FLOAT,vessels[2].NbPoints(),1,1)
v_rad = 1
recons = max(recons,LineRecons(vessels[2],i0,v_rad))

printn "Reconstructing vessel 4"
v_rad <<= Image(FLOAT,vessels[3].NbPoints(),1,1)
v_rad = 1
recons = max(recons,LineRecons(vessels[3],i0,v_rad))

i0_draw.SetIsoContour(0,recons,255*exp(-0.5))
i0_draw.DrawIsoContour(0,1)
