#!/usr/bin/amilab

SetDebugOn
#SetVerboseOn
#import_itk

import_sys
#InfoDialog l_script_dir

image_name ="amilab_logo_rgb8bits"
image_name2="amilab_logo_rgb8bits2"

printn "Reading/writing 8 bits RGB test image:"

for extension in ".png", ".jpg", ".tiff" , ".bmp" {
#for extension in  ".tiff" {

  l_script_dir = GetCurrentScriptDir()
  l_exact=(extension==".png") || (extension==".bmp")

  # read test
  l_i0 = Image(image_name+extension)
  l_i = Image image_name+".ami.gz"
  if (l_i0.GetFormat==RGB) {
    l_i <<= (RGB) l_i
  }
  
  l_imd = (FLOAT) l_i - (FLOAT) l_i0
  if (l_exact) {
    l_d = sqrt(mean(l_imd*l_imd/l_imd.vdim))
    printn boost_format(" l_d = %1% ") % l_d
    l_result = (l_d<0.00000001)
  } else {
    l_maxdiff = max(l_i)-min(l_i)
    l_d = sqrt(mean(l_imd*l_imd/l_imd.vdim))/l_maxdiff
    l_dm = max(sqrt(l_imd*l_imd/l_imd.vdim))/l_maxdiff
    l_dm1 = median(sqrt(l_imd*l_imd/l_imd.vdim))/l_maxdiff
    printn boost_format(" l_d = %1% ") % l_d
    printn boost_format(" max = %1% ") % l_dm
    printn boost_format(" median = %1% ") % l_dm1
    l_result =  (l_d   < 0.05)&&\
                (l_dm  < 0.1 )&&\
                (l_dm1 < 0.05)
  }
  printn boost_format("\t ******* "+extension+" Read Test Result:  %1%") % l_result
  
  
  # write test
  l_i.save l_script_dir+"/"+image_name2+extension
  l_j= Image(image_name2+extension)
  l_imd = (FLOAT) l_i - (FLOAT) l_j
  if (l_exact) {
    l_d = sqrt(mean(l_imd*l_imd/l_imd.vdim))
    printn boost_format(" l_d = %1% ") % l_d
    l_result = (l_d<0.00000001)
  } else {
    l_maxdiff = max(l_i)-min(l_i)
    l_d = sqrt(mean(l_imd*l_imd/l_imd.vdim))/l_maxdiff
    l_dm = max(sqrt(l_imd*l_imd/l_imd.vdim))/l_maxdiff
    l_dm1 = median(sqrt(l_imd*l_imd/l_imd.vdim))/l_maxdiff
    printn boost_format(" l_d = %1% ") % l_d
    printn boost_format(" max = %1% ") % l_dm
    printn boost_format(" median = %1% ") % l_dm1
    l_result =  (l_d   < 0.05)&&\
                (l_dm  < 0.1 )&&\
                (l_dm1 < 0.05)
  }
  printn boost_format("\t ******* "+extension+" Write Test Result:  %1%") % l_result

  # clear created variables
  delvars "l_*"
}

#quit
