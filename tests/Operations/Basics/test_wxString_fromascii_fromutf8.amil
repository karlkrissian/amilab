#!/usr/bin/amilab

#SetDebugOn
#SetVerboseOn

NoMessageDialog(1)

# Hide main frame
ami.MainFrame.Show(0)

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# test_wxString_fromascii_fromutf8.amil
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check the following methods:
#                              - constructor
#                              - c_str
#                              - FromAscii
#                              - FromUTF8
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

func "ctest/ctest_config.amil"

OK = 1 # The test was successful

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn "\t\t ******************************************"
printn "\t\t *                 WARNING                *"
printn "\t\t ******************************************"
printn "\t\t *                                        *"
printn "\t\t * This test does not perform useful work *"
printn "\t\t * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ *"
printn "\t\t *                                        *"
printn "\t\t * Just check:                            *"
printn "\t\t * - The parser does not generate errors. *"
printn "\t\t * - Segmentation fault does not occur.   *"
printn "\t\t *                                        *"
printn "\t\t ******************************************\n"

printn "Create an object of class wxString(sString = wx.wxString(\"hello world !!!\")).\n"
sString = wx.wxString("hello world !!!")

VAL=sString.c_str()

printn "\t Returns the sString value: - %1% -\n" % VAL

printn "Converts the string or character from an ASCII (newString=sString.FromAscii(VAL)).\n"
newString=sString.FromAscii(VAL)

VAL1=newString.c_str()

printn "\t VAL1: %1%\n" % VAL1

printn "Create an object of class wxString(sString1 = wx.wxString(\"hello world !!!\")).\n"
sString1 = wx.wxString("hello world !!!")

VAL2=sString1.c_str()

printn "\t Returns the sString1 value: - %1% -\n" % VAL2

printn "Converts the string or character from an UTF8 (newString1=sString1.FromUTF8(VAL2)).\n"
newString1=sString1.FromUTF8(VAL2)

VAL3=newString1.c_str()

printn "\t VAL3: %1%\n" % VAL3

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ctest.PrintTestResult( OK ) 

#quit

