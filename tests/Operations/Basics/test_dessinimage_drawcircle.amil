#!/usr/bin/amilab

#SetDebugOn
#SetVerboseOn

NoMessageDialog(1)

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# test_dessinimage_drawcircle.amil
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check the following methods:
#                              - drawcircle.
#
# This method is obsolete.
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

func "ctest/ctest_config.amil"

OK = 1 # The test was successful

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn "\t\t ******************************************"
printn "\t\t *                 WARNING                *"
printn "\t\t ******************************************"
printn "\t\t *                                        *"
printn "\t\t * This test does not perform useful work *"
printn "\t\t * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ *"
printn "\t\t *                                        *"
printn "\t\t * Just check:                            *"
printn "\t\t * - The parser does not generate errors. *"
printn "\t\t * - Segmentation fault does not occur.   *"
printn "\t\t *                                        *"
printn "\t\t ******************************************\n"

# Create initial image
func "SyntheticImages/CreateTorus/CreateTorusClass.amil"
CreateTorusClass ctobject

DIMX=100
DIMY=100
DIMZ=100
BG=0
FG=0
R=20
r=4

printn " Create synthetic imaged:"
printn "\t dimx=%1%" % DIMX
printn "\t dimy=%1%" % DIMY
printn "\t dimz=%1%" % DIMZ
printn "\t bg=%1%" % BG
printn "\t fg=%1%" % FG
printn "\t R=%1%"  % R
printn "\t r=%1%"  % r

ctobject.dimx = 60
ctobject.dimy = 60
ctobject.dimz = 30
ctobject.bg = 0
ctobject.fg = 100
ctobject.R = 20
ctobject.r = 4
ctobject.Create()

printn "\t\t Create an object of class DessinImage (torus_draw).\n"
torus_draw=DessinImage(&torus)

torus = torus/200

X=54
Y=31
Z=51
CX=200
CY=10
CZ=10
printn "\t\t Draw a circle (The drawcircle method is obsolete):"
printn "\t\t\t X=%1%" % X
printn "\t\t\t Y=%1%" % Y
printn "\t\t\t Z=%1%" % Z
printn "\t\t\t RED=%1%" % CX
printn "\t\t\t GREEN=%1%" % CY
printn "\t\t\t BLUE=%1%" % CZ
torus_draw.drawcircle(X,Y,Z,CX,CY,CZ)

printn "\n\t\t Update the image that is drawn in the specified window (update)"
torus_draw.update()

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ctest.PrintTestResult( OK ) 

#quit

