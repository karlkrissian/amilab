#!/usr/bin/amilab

#SetDebugOn
#SetVerboseOn

NoMessageDialog(1)

# Hide main frame
ami.MainFrame.ShowWin(0)

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# test_wxfilename_directory.amil
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check the following methods:
#                              - constructor
#                              - Mkdir
#                              - Rmdir
#                              - AssignDir
#                              - DirExists
#                              - IsDir
#                              - IsDirReadable
#                              - IsDirWritable
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

func "ctest/ctest_config.amil"

OK = 1 # The test was successful

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn "Constructor: MODE 0 (file=wx.wxFileName()).\n"
file=wx.wxFileName()

PATH="/tmp/KARL"

printn "\t The new path: - %1% -\n" % PATH

printn "\t Set the new path (file.AssignDir(PATH))\n"
file.AssignDir(PATH)

VAL = file.GetFullPath();
printn "\t The full path: - %1% -\n" % VAL

printn "\t Creates the directory (file.Mkdir())\n"
if (file.Mkdir()) {
  printn "\t %1% directory has been created.\n" % VAL
} else {
  OK=0;
  printn  "\nERROR: The Mkdir failed."
}

printn "\t Check the new directory (file.DirExists())\n"
if (file.DirExists()) {
  printn "\t %1% directory was found.\n" % VAL
} else {
  OK=0;
  printn  "\nERROR: The directory is not found."
}

printn "\t Check if the directory is readable (file.IsDirReadable())\n"
if (file.IsDirReadable()) {
  printn "\t %1% directory is readable.\n" % VAL
} else {
  OK=0;
  printn  "\nERROR: the directory is not readable."
}

printn "\t Check if the directory is writable (file.IsDirWritable())\n"
if (file.IsDirWritable()) {
  printn "\t %1% directory is writable.\n" % VAL
} else {
  OK=0;
  printn  "\nERROR: the directory is not writable."
}

printn "\t Check if this object represents a directory. (file.IsDir())\n"
if (file.IsDir()) {
  printn "\t %1% is a directory.\n" % VAL
} else {
  OK=0;
  printn  "\nERROR: IsDir failed."
}

printn "\t Deletes the directory from the file system(file.Rmdir())\n"
if (file.Rmdir()) {
  printn "\t %1% directory was deleted.\n" % VAL
} else {
  OK=0;
  printn  "\nERROR: The Rmdir failed."
}

printn "\t Set permissions (PERM=0777)\n"
PERM=0777

PATH="/tmp/KARL_2"

printn "\t The new path: - %1% -\n" % PATH

printn "\t Creates the directory (file.Mkdir(PATH,PERM))\n"
if (file.Mkdir(PATH,PERM)) {
  printn "\t %1% directory has been created.\n" % PATH
} else {
  OK=0;
  printn  "\nERROR: The Mkdir failed."
}

printn "\t Check the new directory (file.DirExists(PATH))\n"
if (file.DirExists(PATH)) {
  printn "\t %1% directory was found.\n" % PATH
} else {
  OK=0;
  printn  "\nERROR: The directory is not found."
}

printn "\t Check if the directory is readable (file.IsDirReadable(PATH))\n"
if (file.IsDirReadable(PATH)) {
  printn "\t %1% directory is readable.\n" % PATH
} else {
  OK=0;
  printn  "\nERROR: the directory is not readable."
}

printn "\t Check if the directory is writable (file.IsDirWritable(PATH))\n"
if (file.IsDirWritable(PATH)) {
  printn "\t %1% directory is writable.\n" % PATH
} else {
  OK=0;
  printn  "\nERROR: the directory is not writable."
}

printn "\t Deletes the directory from the file system(file.Rmdir(PATH))\n"
if (file.Rmdir(PATH)) {
  printn "\t %1% directory was deleted.\n" % PATH
} else {
  OK=0;
  printn  "\nERROR: The Rmdir failed."
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ctest.PrintTestResult( OK ) 

#quit

