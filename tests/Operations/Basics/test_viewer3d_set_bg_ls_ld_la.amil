#!/usr/bin/amilab

#SetDebugOn
#SetVerboseOn

NoMessageDialog(1)

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# test_viewer3d_set_bg_ls_ld_la.amil
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check the following methods:
#                              - SetBackground
#                              - SetLightSpecular
#                              - SetLightDiffuse
#                              - SetLightAmbient
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

func "ctest/ctest_config.amil"

OK = 1 # The test was successful

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn "\t\t ******************************************"
printn "\t\t *                 WARNING                *"
printn "\t\t ******************************************"
printn "\t\t *                                        *"
printn "\t\t * This test does not perform useful work *"
printn "\t\t * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ *"
printn "\t\t *                                        *"
printn "\t\t * Just check:                            *"
printn "\t\t * - The parser does not generate errors. *"
printn "\t\t * - Segmentation fault does not occur.   *"
printn "\t\t *                                        *"
printn "\t\t ******************************************\n"

# Create initial image
func "SyntheticImages/CreateTorus/CreateTorusClass.amil"
CreateTorusClass ctobject
ctobject.Create()
printn " Create synthetic imaged."

printn "\t\t Create an object of class Viewer3D (viewer).\n"
viewer=Viewer3D()

printn "\t\t Create an object of class SurfacePoly (surf).\n"
surf=isosurf(torus,50.1)

printn "\t\t Add the SurfacePoly object to the viewer (AddObject).\n"
viewer.AddObject(surf)

printn "\t\t Centers the 3D view (Center).\n"
viewer.Center()

printn "\t\t  Normalizes the 3D view based (Normalize).\n"
viewer.Normalize()

printn "\t\t  Updating the scene information (Paint).\n"
viewer.Paint()

printn "\t\t  Sets the background to green color (SetBackground).\n"
viewer.SetBackground(0,255,0)

printn "\t\t  Sets the specular red color for a given light (SetLightSpecular).\n"
viewer.SetLightSpecular(0,255,0,0)

printn "\t\t  Sets the diffuse blue color for a given light (SetLightDiffuse).\n"
viewer.SetLightDiffuse(0,0,0,255)

printn "\t\t  Sets the ambient blue color for a given light (SetLightAmbient).\n"
viewer.SetLightAmbient(0,0,0,255)

printn "\t\t Remove the SurfacePoly object to the viewer (Remove).\n"
viewer.Remove(surf)

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ctest.PrintTestResult( OK ) 

#quit

