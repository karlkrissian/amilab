#!/usr/bin/amilab

#SetDebugOn
#SetVerboseOn

NoMessageDialog(1)

# Hide main frame
ami.MainFrame.Show(0)

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# test_bool_type.amil
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check the operations you can perform with the bool type.
#
# Permitted operations:   !, &&, ||, !=, ==, =, 
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

func "ctest/ctest_config.amil"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn  "\n\t Initialization and equal operator: B = BOOL(true); B1 = B;"
B=BOOL (true)
B1=B
printn  "\t\t B = %1%" % B
printn  "\t\t B1 = %1%" % B1

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn  "\n\t Operator: =="
C1=B==B1
printn  "\t\t TRUE==TRUE=>TRUE (C1=B==B1)--> =>%1%" % C1
if(C1){
  OK = 1
} else {
  OK = 0 
  printn "Failed: TRUE==TRUE=>TRUE"
}
B1=false
C2=B==B1
printn  "\t\t TRUE==FALSE=>FALSE (C2=B==B1)--> =>%1%" % C2
if(!C2){
  OK = 1
} else {
  OK = 0 
  printn "Failed: TRUE==FALSE=>FALSE"
}
B=false
C3=B==B1
printn  "\t\t FALSE==FALSE=>TRUE (C3=B==B1)--> =>%1%" % C3
if(C3){
  OK = 1
} else {
  OK = 0 
  printn "Failed: FALSE==FALSE=>TRUE"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn  "\n\t Operator: !="
B=true
B1=true
C1=B!=B1
printn  "\t\t TRUE!=TRUE=>FALSE (C1=B!=B1)--> =>%1%" % C1
if(!C1){
  OK1 = 1
} else {
  OK1 = 0 
  printn "Failed: TRUE!=TRUE=>FALSE"
}
B1=false
C2=B!=B1
printn  "\t\t TRUE!=FALSE=>TRUE (C2=B!=B1)--> =>%1%" % C2
if(C2){
  OK1 = 1
} else {
  OK1 = 0 
  printn "Failed: TRUE!=FALSE=>TRUE"
}
B=false
C3=B!=B1
printn  "\t\t FALSE!=FALSE=>FALSE (C3=B!=B1)--> =>%1%" % C3
if(!C3){
  OK1 = 1
} else {
  OK1 = 0 
  printn "Failed: FALSE!=FALSE=>FALSE"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn  "\n\t Operator: !"
B=true
C1=!B
printn  "\t\t !TRUE=>FALSE (C1=!B)--> =>%1%" % C1
if(!C1){
  OK2 = 1
} else {
  OK2 = 0 
  printn "Failed: !TRUE=>FALSE"
}
B1=false
C1=!B
printn  "\t\t !FALSE=>TRUE (C2=!B)--> =>%1%" % C2
if(C2){
  OK2 = 1
} else {
  OK2 = 0 
  printn "Failed: !FALSE=>TRUE"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn  "\n\t Operator: && "

B=true
B1=true
C1=B&&B1
printn  "\t\t TRUE&&TRUE=>TRUE --> C1=B&&B1=>%1%" % C1
if(C1){
  OK3 = 1
} else {
  OK3 = 0 
  printn "Failed: TRUE&&TRUE=>TRUE"
}

B1=false
C2=B&&B1
printn  "\t\t TRUE&&FALSE=>FALSE --> C2=B&&B1=>%1%" % C2
if(!C2){
  OK3 = 1
} else {
  OK3 = 0 
  printn "Failed: TRUE&&FALSE=>FALSE"
}

B=false
B1=true
C3=B&&B1
printn  "\t\t FALSE&&TRUE=>FALSE --> C3=B&&B1=>%1%" % C3
if(!C3){
  OK3 = 1
} else {
  OK3 = 0 
  printn "Failed: FALSE&&TRUE=>FALSE"
}

B1=false
C4=B&&B1
printn  "\t\t FALSE&&FALSE=>FALSE --> C4=B&&B1=>%1%" % C4

if(!C4){
  OK3 = 1
} else {
  OK3 = 0 
  printn "Failed: FALSE&&FALSE=>FALSE"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn  "\n\t Operator: || "

B=true
B1=true
C1=B||B1
printn  "\t\t TRUE||TRUE=>TRUE --> C1=B||B1=>%1%" % C1
if(C1){
  OK4 = 1
} else {
  OK4 = 0 
  printn "Failed: TRUE||TRUE=>TRUE"
}

B1=false
C2=B||B1
printn  "\t\t TRUE||FALSE=>TRUE --> C2=B||B1=>%1%" % C2
if(C2){
  OK4 = 1
} else {
  OK4 = 0 
  printn "Failed: TRUE||FALSE=>TRUE"
}

B=false
B1=true
C3=B||B1
printn  "\t\t FALSE||TRUE=>TRUE --> C3=B||B1=>%1%" % C3
if(C3){
  OK4 = 1
} else {
  OK4 = 0 
  printn "Failed: FALSE||TRUE=>TRUE"
}

B1=false
C4=B||B1
printn  "\t\t FALSE||FALSE=>FALSE --> C4=B||B1=>%1%" % C4

if(!C4){
  OK4 = 1
} else {
  OK4 = 0 
  printn "Failed: FALSE||FALSE=>FALSE"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn  "\n\t Other cases: "

B=false
C5=B==0
printn  "\t\t C5=B==0 (FALSE==0=>TRUE) --> C5=B==0=>%1%" % C5

if(C5){
  OK5 = 1
} else {
  OK5 = 0 
  printn "Failed: C5=B==0 (FALSE==0=>TRUE)"
}

B=true
C5=B==1
printn  "\t\t C5=B==1 (TRUE==1=>TRUE) --> C5=B==1=>%1%" % C5

if(C5){
  OK5 = 1
} else {
  OK5 = 0 
  printn "Failed: C5=B==1 (TRUE==1=>TRUE)"
}

B=false
C5=B==1
printn  "\t\t C5=B==1 (FALSE==1=>FALSE) --> C5=B==1=>%1%" % C5

if(!C5){
  OK5 = 1
} else {
  OK5 = 0 
  printn "Failed: C5=B==1 (FALSE==1=>FALSE)"
}

B=true
C5=B==0
printn  "\t\t C5=B==0 (TRUE==0=>FALSE) --> C5=B==0=>%1%" % C5

if(!C5){
  OK5 = 1
} else {
  OK5 = 0 
  printn "Failed: C5=B==0 (TRUE==0=>FALSE)"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if (OK && OK1 && OK2 && OK3 && OK4 && OK5) {
  OK=1;
}else { OK=0; }

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ctest.PrintTestResult( OK ) 

