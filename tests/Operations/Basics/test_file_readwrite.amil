#!/usr/bin/amilab

#SetDebugOn
#SetVerboseOn

NoMessageDialog(1)

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# test_file_readwrite.amil
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check the following methods:
#                              - open
#                              - close
#                              - print
#                              - printn
#                              - printvar
#                              - printnvar
#                              - read_string
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

func "ctest/ctest_config.amil"

OK = 1 # The test was successful

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn "\t\t Create an object of class File(file = File(\"test_read_write.txt\", \"w\")).\n"
file=File("test_read_write.txt", "w")

printn "\t\t Write Hello(file._print(\"Hello \")).\n"
file._print("Hello ")

printn "\t\t Write World !!!(file._printn(\"World !!!\")).\n"
file._printn("World !!!")

printn "\t\t Write Nice.(file._printn(\"Nice.\")).\n"
file._printn("Nice.")

printn "\t\t Close the file(Deprecated)).\n"
file.close()

printn "\t\t Create an object of class File(newFile = File(\"test_read_write.txt\", \"r\")).\n"
newFile=File("test_read_write.txt", "r")

printn "\t\t Read the file: test_read_write.txt (firstValue=newFile.read_string()).\n"
firstValue=newFile.read_string()

printn "\t\t Read the file: test_read_write.txt (secondValue=newFile.read_string()).\n"
secondValue=newFile.read_string()

printn "\t\t Read the file: test_read_write.txt (thirdValue=newFile.read_string()).\n"
thirdValue=newFile.read_string()

printn "\t\t Read the file: test_read_write.txt (fourthValue=newFile.read_string()).\n"
fourthValue=newFile.read_string()

printn "\t\t Close the file(Deprecated)).\n"
newFile.close()

printn "\t\t First value read=%1%\n" % firstValue
printn "\t\t Second value read=%1%\n" % secondValue
printn "\t\t Third value read=%1%\n" % thirdValue
printn "\t\t Fourth value read=%1%\n" % fourthValue

if((firstValue != "Hello") && (secondValue != "World") && \
   (thirdValue != "!!!") && (fourthValue != "Nice")) {
  OK = 0
  printn  "\nERROR: The reading does not match the value written."
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ctest.PrintTestResult( OK ) 

#quit

