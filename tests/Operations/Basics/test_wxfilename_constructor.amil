#!/usr/bin/amilab

#SetDebugOn
#SetVerboseOn

NoMessageDialog(1)

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# test_wxfilename_constructor.amil
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check the following methods:
#                              - constructor
#                              - try_cast
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

func "ctest/ctest_config.amil"

OK = 1 # The test was successful

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printn "Constructor: MODE 0 (file=wx.wxFileName()).\n"
file=wx.wxFileName()

printn "Constructor: MODE 1 - a full file name - (file1=wx.wxFileName(\"karl\")).\n"
file1=wx.wxFileName("karl")

printn "Constructor: MODE 2 - a directory name, a file name - (file2=wx.wxFileName(\"/tmp/\",\"karl\")).\n"
file2=wx.wxFileName("/tmp/","karl")

printn "Constructor: MODE 3 - a directory name, a file name, a file extension - (file3=wx.wxFileName(\"/tmp/\",\"karl\",\"txt\")).\n"
file3=wx.wxFileName("/tmp/","karl","txt")

printn "Constructor: MODE 4 - a volume name, a directory name, a file name, a file extension - (file4=wx.wxFileName(\"/\",\"tmp/\",\"karl\",\"txt\")).\n"
file4=wx.wxFileName("/","tmp/","karl","txt")

VAL1 = file.GetFullPath();

printn "\t The full path with name and extension(file): - %1% -\n" % VAL1

if (VAL1 != "")  {
  OK=0;
  printn  "\nERROR: The constructor failed (MODE 0)."
}

VAL2 = file1._GetName()

printn "\t The name part of the filename (without extension)(file1): - %1% -\n" % VAL2

if (VAL2 != "karl")  {
  OK=0;
  printn  "\nERROR: The constructor failed (MODE 1)."
}

VAL3 = file2.GetPath()
VAL4 = file2._GetName()

printn "\t The path part of the filename (without the name or extension)(file2): - %1% -\n" % VAL3
printn "\t The name part of the filename (without extension)(file2): - %1% -\n" % VAL4

if ((VAL3 != "/tmp/") && (VAL4 != "karl"))  {
  OK=0;
  printn  "\nERROR: The constructor failed (MODE 2)."
}

VAL5 = file3.GetPath()
VAL6 = file3._GetName()
VAL7 = file3.GetExt()

printn "\t The path part of the filename (without the name or extension)(file3): - %1% -\n" % VAL5
printn "\t The name part of the filename (without extension)(file3): - %1% -\n" % VAL6
printn "\t The file name extension(file3): - %1% -\n" % VAL7

if ((VAL5 != "/tmp/") && (VAL6 != "karl") && (VAL7 != "txt"))  {
  OK=0;
  printn  "\nERROR: The constructor failed (MODE 3)."
}

VAL8 = file4.GetPath()
VAL9 = file4._GetName()
VAL10 = file4.GetExt()
VAL11 = file4.GetVolume()

printn "\t The path part of the filename (without the name or extension)(file4): - %1% -\n" % VAL8
printn "\t The name part of the filename (without extension)(file4): - %1% -\n" % VAL9
printn "\t The file name extension(file4): - %1% -\n" % VAL10
printn "\t The string containing the volume for this file name(file4): - %1% -\n" % VAL11

if ((VAL8 != "/tmp/") && (VAL9 != "karl") && (VAL10 != "txt") && (VAL11 != "/"))  {
  OK=0;
  printn  "\nERROR: The constructor failed (MODE 4)."
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ctest.PrintTestResult( OK ) 

#quit

